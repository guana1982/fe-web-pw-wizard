{"version":3,"file":"node_modules_angular_material_fesm2022_snack-bar_mjs-_72180.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;;AAGvB;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,GAAG;AACthC,OAAO;IAAEC,IAAI,EAAE,CAAC,CAAC;IAAqCF,IAAI;IAAEC,WAAW;IAAEE,OAAO,EAAE,CAAC;EAAE,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,OAAO,EAAEC,MAAM,GAAG,IAAI,EAAE;EACrC,OAAO;IAAEJ,IAAI,EAAE,CAAC,CAAC;IAAqCI,MAAM;IAAED;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,KAAKA,CAACC,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCM,KAAK;IAAEL;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,QAAQA,CAACD,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACrC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAsCM,KAAK;IAAEL;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,KAAKA,CAACC,MAAM,EAAE;EACnB,OAAO;IAAET,IAAI,EAAE,CAAC,CAAC;IAAmCI,MAAM,EAAEK,MAAM;IAAEC,MAAM,EAAE;EAAK,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACb,IAAI,EAAEM,MAAM,EAAEH,OAAO,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCF,IAAI;IAAEM,MAAM;IAAEH;EAAQ,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,SAASA,CAACN,KAAK,EAAE;EACtB,OAAO;IAAEN,IAAI,EAAE,CAAC,CAAC;IAAuCM;EAAM,CAAC;AACneAAe,EAAER,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACxD,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAwCe,IAAI,EAAED,eAAe;IAAEE,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,SAASA,CAACV,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACtC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAuCgB,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgB,YAAYA,CAAChB,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAA0CC;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,YAAYA,CAACF,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAC7C,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAwCgB,SAAS;IAAEf;EAAQ,CAAC;AAClkB,KAAKA,CAACC,QAAQ,EAAEJ,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAChD,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAmCoB,QAAQ;IAAEJ,SAAS;IAAEf;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["./node_modules/@angular/animations/fesm2022/animations.mjs","./node_modules/@angular/material/fesm2022/snack-bar.mjs"],"sourcesContent":["/**\n * @license Angular v16.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n}\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\n\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* AnimationMetadataType.Trigger */, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: 4 /* AnimationMetadataType.Animate */, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: 3 /* AnimationMetadataType.Group */, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: 2 /* AnimationMetadataType.Sequence */, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: 6 /* AnimationMetadataType.Style */, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: 0 /* AnimationMetadataType.State */, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: 5 /* AnimationMetadataType.Keyframes */, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* AnimationMetadataType.Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: 8 /* AnimationMetadataType.Reference */, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: 9 /* AnimationMetadataType.AnimateChild */, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: 10 /* AnimationMetadataType.AnimateRef */, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: 11 /* AnimationMetadataType.Query */, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* AnimationMetadataType.Stagger */, timings, animation };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ɵAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    constructor(duration = 0, delay = 0) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._originalOnDoneFns = [];\n        this._originalOnStartFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this._position = 0;\n        this.parentPlayer = null;\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        queueMicrotask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n        this._finished = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n    constructor(_players) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            queueMicrotask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach(player => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach(player => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(player => player.play());\n    }\n    pause() {\n        this.players.forEach(player => player.pause());\n    }\n    restart() {\n        this.players.forEach(player => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach(player => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(player => player.destroy());\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach(player => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach(player => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach(player => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\nconst ɵPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, NgModule, Injector, TemplateRef, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: SimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\nlet uniqueId = 0;\n/**\n * Base class for snack bar containers.\n * @docs-private\n */\nclass _MatSnackBarContainerBase extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        this._document = inject(DOCUMENT);\n        this._trackedModals = new Set();\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /** Unique ID of the aria-live element. */\n        this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with the\n        // `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSnackBarContainerBase, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatSnackBarContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSnackBarContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends _MatSnackBarContainerBase {\n    /** Applies the correct CSS class to the label based on its content. */\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSnackBarContainer, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open\" }, viewQueries: [{ propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"], dependencies: [{ kind: \"directive\", type: i3$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"] }]\n        }], propDecorators: { _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\nclass MatSnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarModule, declarations: [SimpleSnackBar,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction], imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], exports: [MatCommonModule,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule],\n                    exports: [\n                        MatCommonModule,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                    declarations: [\n                        SimpleSnackBar,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                }]\n        }] });\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\nclass _MatSnackBarBase {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSnackBarBase, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: _MatSnackBarBase, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSnackBarBase }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSnackBarBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: _MatSnackBarBase, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBar, providedIn: MatSnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatSnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, _MatSnackBarBase, _MatSnackBarContainerBase, matSnackBarAnimations };\n"],"names":["AnimationBuilder","AnimationFactory","AUTO_STYLE","trigger","name","definitions","type","options","animate","timings","styles","group","steps","sequence","style","tokens","offset","state","keyframes","transition","stateChangeExpr","expr","animation","animateChild","useAnimation","query","selector","stagger","NoopAnimationPlayer","constructor","duration","delay","_onDoneFns","_onStartFns","_onDestroyFns","_originalOnDoneFns","_originalOnStartFns","_started","_destroyed","_finished","_position","parentPlayer","totalTime","_onFinish","forEach","fn","onStart","push","onDone","onDestroy","hasStarted","init","play","_onStart","triggerMicrotask","queueMicrotask","pause","restart","finish","destroy","reset","setPosition","position","getPosition","triggerCallback","phaseName","methods","length","AnimationGroupPlayer","_players","players","doneCount","destroyCount","startCount","total","player","_onDestroy","reduce","time","Math","max","p","timeAtPosition","min","longestPlayer","longestSoFar","newPlayerIsLongest","beforeDestroy","ɵPRE_STYLE","ɵAnimationGroupPlayer","i0","InjectionToken","Directive","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","inject","ViewChild","NgModule","Injector","TemplateRef","Injectable","Optional","SkipSelf","Subject","i2","DOCUMENT","CommonModule","i3","MatButtonModule","i3$1","BasePortalOutlet","CdkPortalOutlet","PortalModule","ComponentPortal","TemplatePortal","i1","take","takeUntil","i2$1","i3$2","Breakpoints","i1$1","OverlayModule","OverlayConfig","MatCommonModule","SimpleSnackBar_div_2_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","SimpleSnackBar_div_2_Template_button_click_1_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","action","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵtextInterpolate1","data","_c0","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","_onExit","subscribe","_finishDismiss","dismiss","closed","exit","clearTimeout","_durationTimeoutId","dismissWithAction","next","complete","closeWithAction","_dismissAfter","setTimeout","_open","dispose","dismissedByAction","afterDismissed","afterOpened","_onEnter","onAction","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MatSnackBarLabel","_","ɵfac","MatSnackBarLabel_Factory","t","_2","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","ngDevMode","ɵsetClassMetadata","args","host","MatSnackBarActions","MatSnackBarActions_Factory","MatSnackBarAction","MatSnackBarAction_Factory","SimpleSnackBar","snackBarRef","hasAction","SimpleSnackBar_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","exportAs","decls","vars","consts","template","SimpleSnackBar_Template","ɵɵtemplate","message","ɵɵproperty","dependencies","NgIf","MatButton","encapsulation","changeDetection","None","OnPush","undefined","decorators","matSnackBarAnimations","snackBarState","transform","opacity","uniqueId","_MatSnackBarContainerBase","_ngZone","_elementRef","_changeDetectorRef","_platform","snackBarConfig","_document","_trackedModals","Set","_announceDelay","_onAnnounce","_animationState","_liveElementId","attachDomPortal","portal","_assertNotAttached","result","_portalOutlet","_afterPortalAttached","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","onAnimationEnd","event","fromState","toState","_completeExit","onEnter","run","enter","detectChanges","_screenReaderAnnounce","nativeElement","setAttribute","_announceTimeoutId","ngOnDestroy","_clearFromModals","onMicrotaskEmpty","pipe","element","panelClasses","panelClass","Array","isArray","cssClass","classList","add","_exposeToModals","id","modals","querySelectorAll","i","modal","ariaOwns","getAttribute","indexOf","newValue","replace","trim","removeAttribute","clear","hasAttached","Error","runOutsideAngular","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","appendChild","focus","_MatSnackBarContainerBase_Factory","NgZone","ElementRef","ChangeDetectorRef","Platform","viewQuery","_MatSnackBarContainerBase_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","features","ɵɵInheritDefinitionFeature","static","MatSnackBarContainer","label","_label","labelClass","toggle","ɵMatSnackBarContainer_BaseFactory","MatSnackBarContainer_Factory","ɵɵgetInheritedFactory","MatSnackBarContainer_Query","hostVars","hostBindings","MatSnackBarContainer_HostBindings","ɵɵsyntheticHostListener","MatSnackBarContainer_animation_state_done_HostBindingHandler","$event","ɵɵsyntheticHostProperty","MatSnackBarContainer_Template","ɵɵelement","ɵɵattribute","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","providedIn","factory","_MatSnackBarBase","_openedSnackBarRef","parent","_parentSnackBar","_snackBarRefAtThisLevel","value","_overlay","_injector","_breakpointObserver","_defaultConfig","openFromComponent","component","config","_attach","openFromTemplate","open","_config","simpleSnackBarComponent","_attachSnackBarContainer","overlayRef","userInjector","viewContainerRef","injector","create","providers","provide","useValue","containerPortal","snackBarContainerComponent","containerRef","attach","instance","content","userConfig","_createOverlay","container","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","overlayElement","handsetCssClass","matches","announce","_animateSnackBar","overlayConfig","direction","positionStrategy","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","_MatSnackBarBase_Factory","ɵɵinject","Overlay","LiveAnnouncer","BreakpointObserver","ɵprov","ɵɵdefineInjectable","token","MatSnackBar","overlay","live","breakpointObserver","parentSnackBar","defaultConfig","MatSnackBar_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}