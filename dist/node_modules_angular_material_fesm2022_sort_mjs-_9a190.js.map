{"version":3,"file":"node_modules_angular_material_fesm2022_sort_mjs-_9a190.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;;AAGvB;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,GAAG;AACthC,OAAO;IAAEC,IAAI,EAAE,CAAC,CAAC;IAAqCF,IAAI;IAAEC,WAAW;IAAEE,OAAO,EAAE,CAAC;EAAE,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,OAAO,EAAEC,MAAM,GAAG,IAAI,EAAE;EACrC,OAAO;IAAEJ,IAAI,EAAE,CAAC,CAAC;IAAqCI,MAAM;IAAED;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,KAAKA,CAACC,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCM,KAAK;IAAEL;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,QAAQA,CAACD,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACrC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAsCM,KAAK;IAAEL;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,KAAKA,CAACC,MAAM,EAAE;EACnB,OAAO;IAAET,IAAI,EAAE,CAAC,CAAC;IAAmCI,MAAM,EAAEK,MAAM;IAAEC,MAAM,EAAE;EAAK,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACb,IAAI,EAAEM,MAAM,EAAEH,OAAO,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCF,IAAI;IAAEM,MAAM;IAAEH;EAAQ,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,SAASA,CAACN,KAAK,EAAE;EACtB,OAAO;IAAEN,IAAI,EAAE,CAAC,CAAC;IAAuCM;EAAM,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,UAAUA,CAACC,eAAe,EAAER,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACxD,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAwCe,IAAI,EAAED,eAAe;IAAEE,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,SAASA,CAACV,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACtC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAuCgB,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgB,YAAYA,CAAChB,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAA0CC;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,YAAYA,CAACF,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAC7C,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAwCgB,SAAS;IAAEf;EAAQ,CAAC;AAClkB,KAAKA,CAACC,QAAQ,EAAEJ,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAChD,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAmCoB,QAAQ;IAAEJ,SAAS;IAAEf;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoB,OAAOA,CAAClB,OAAO,EAAEa,SAAS,EAAE;EACjC,OAAO;IAAEhB,IAAI,EAAE,EAAE,CAAC;IAAqCG,OAAO;IAAEa;EAAU,CAAC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMM,mBAAm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","sources":["./node_modules/@angular/animations/fesm2022/animations.mjs","./node_modules/@angular/material/fesm2022/sort.mjs"],"sourcesContent":["/**\n * @license Angular v16.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n}\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\n\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* AnimationMetadataType.Trigger */, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: 4 /* AnimationMetadataType.Animate */, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: 3 /* AnimationMetadataType.Group */, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: 2 /* AnimationMetadataType.Sequence */, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: 6 /* AnimationMetadataType.Style */, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: 0 /* AnimationMetadataType.State */, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: 5 /* AnimationMetadataType.Keyframes */, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* AnimationMetadataType.Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: 8 /* AnimationMetadataType.Reference */, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: 9 /* AnimationMetadataType.AnimateChild */, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: 10 /* AnimationMetadataType.AnimateRef */, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: 11 /* AnimationMetadataType.Query */, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* AnimationMetadataType.Stagger */, timings, animation };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ɵAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    constructor(duration = 0, delay = 0) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._originalOnDoneFns = [];\n        this._originalOnStartFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this._position = 0;\n        this.parentPlayer = null;\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        queueMicrotask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n        this._finished = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n    constructor(_players) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            queueMicrotask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach(player => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach(player => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(player => player.play());\n    }\n    pause() {\n        this.players.forEach(player => player.pause());\n    }\n    restart() {\n        this.players.forEach(player => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach(player => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(player => player.destroy());\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach(player => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach(player => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach(player => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\nconst ɵPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Input, Output, Injectable, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { mixinInitialized, mixinDisabled, AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overridden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overridden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = sortable?.disableClear ?? this.disableClear ?? !!this._defaultOptions?.disableClear;\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: {\n                        'class': 'mat-sort',\n                    },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber, defaultOptions) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        if (defaultOptions?.arrowPosition) {\n            this.arrowPosition = defaultOptions?.arrowPosition;\n        }\n        this._handleStateChanges();\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            this._ariaDescriber?.removeDescription(this._sortButton, this._sortActionDescription);\n            this._ariaDescriber?.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }, { token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n            matSortAnimations.indicator,\n            matSortAnimations.leftPointer,\n            matSortAnimations.rightPointer,\n            matSortAnimations.arrowOpacity,\n            matSortAnimations.arrowPosition,\n            matSortAnimations.allowChildren,\n        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition === 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-container::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px) * -1)}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                }, {\n                    type: Optional\n                }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SORT_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\nclass MatSortModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n"],"names":["AnimationBuilder","AnimationFactory","AUTO_STYLE","trigger","name","definitions","type","options","animate","timings","styles","group","steps","sequence","style","tokens","offset","state","keyframes","transition","stateChangeExpr","expr","animation","animateChild","useAnimation","query","selector","stagger","NoopAnimationPlayer","constructor","duration","delay","_onDoneFns","_onStartFns","_onDestroyFns","_originalOnDoneFns","_originalOnStartFns","_started","_destroyed","_finished","_position","parentPlayer","totalTime","_onFinish","forEach","fn","onStart","push","onDone","onDestroy","hasStarted","init","play","_onStart","triggerMicrotask","queueMicrotask","pause","restart","finish","destroy","reset","setPosition","position","getPosition","triggerCallback","phaseName","methods","length","AnimationGroupPlayer","_players","players","doneCount","destroyCount","startCount","total","player","_onDestroy","reduce","time","Math","max","p","timeAtPosition","min","longestPlayer","longestSoFar","newPlayerIsLongest","beforeDestroy","ɵPRE_STYLE","ɵAnimationGroupPlayer","i0","InjectionToken","EventEmitter","Directive","Optional","Inject","Input","Output","Injectable","SkipSelf","Component","ViewEncapsulation","ChangeDetectionStrategy","NgModule","i3","coerceBooleanProperty","SPACE","ENTER","mixinInitialized","mixinDisabled","AnimationDurations","AnimationCurves","MatCommonModule","Subject","merge","i4","CommonModule","_c0","MatSortHeader_div_3_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_disableViewStateAnimation","MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener","ctx_r3","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵproperty","_getArrowViewState","_getArrowDirectionState","ɵɵadvance","_c1","getSortDuplicateSortableIdError","id","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","_direction","ngDevMode","disableClear","_disableClear","v","_defaultOptions","sortables","Map","_stateChanges","start","sortChange","register","sortable","has","set","deregister","delete","sort","active","getNextSortDirection","emit","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","indexOf","ngOnInit","_markInitialized","ngOnChanges","next","ngOnDestroy","complete","_","ɵfac","MatSort_Factory","t","ɵɵdirectiveInject","_2","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","inputs","disabled","outputs","exportAs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵsetClassMetadata","args","host","undefined","decorators","sortOrder","reverse","SORT_ANIMATION_TRANSITION","ENTERING","STANDARD_CURVE","matSortAnimations","indicator","transform","leftPointer","rightPointer","arrowOpacity","opacity","arrowPosition","allowChildren","optional","MatSortHeaderIntl","changes","MatSortHeaderIntl_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MAT_SORT_HEADER_INTL_PROVIDER","provide","deps","useFactory","_MatSortHeaderBase","MatSortHeader","sortActionDescription","_sortActionDescription","value","_updateSortActionDescription","_intl","_changeDetectorRef","_sort","_columnDef","_focusMonitor","_elementRef","_ariaDescriber","defaultOptions","_showIndicatorHint","_viewState","_arrowDirection","_handleStateChanges","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","nativeElement","querySelector","ngAfterViewInit","monitor","subscribe","origin","newState","_setIndicatorHintVisible","markForCheck","stopMonitoring","_rerenderSubscription","unsubscribe","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_handleKeydown","event","keyCode","preventDefault","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","MatSortHeader_Factory","ChangeDetectorRef","FocusMonitor","ElementRef","AriaDescriber","ɵcmp","ɵɵdefineComponent","hostVars","hostBindings","MatSortHeader_HostBindings","MatSortHeader_click_HostBindingHandler","MatSortHeader_keydown_HostBindingHandler","$event","MatSortHeader_mouseenter_HostBindingHandler","MatSortHeader_mouseleave_HostBindingHandler","ɵɵattribute","ɵɵclassProp","attrs","ngContentSelectors","decls","vars","consts","template","MatSortHeader_Template","ɵɵprojectionDef","ɵɵprojection","ɵɵtemplate","dependencies","NgIf","encapsulation","data","changeDetection","None","OnPush","animations","MatSortModule","MatSortModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}