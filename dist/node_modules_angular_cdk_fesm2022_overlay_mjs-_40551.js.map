{"version":3,"file":"node_modules_angular_cdk_fesm2022_overlay_mjs-_40551.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/observable/from.js","./node_modules/rxjs/dist/esm/internal/observable/merge.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/map.js","./node_modules/rxjs/dist/esm/internal/operators/mergeAll.js","./node_modules/rxjs/dist/esm/internal/operators/mergeInternals.js","./node_modules/rxjs/dist/esm/internal/operators/mergeMap.js","./node_modules/rxjs/dist/esm/internal/operators/observeOn.js","./node_modules/rxjs/dist/esm/internal/operators/subscribeOn.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleArray.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleAsyncIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleObservable.js","./node_modules/rxjs/dist/esm/internal/scheduled/schedulePromise.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleReadableStreamLike.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduled.js","./node_modules/rxjs/dist/esm/internal/util/args.js","./node_modules/rxjs/dist/esm/internal/util/executeSchedule.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/@angular/cdk/fesm2022/overlay.mjs"],"sourcesContent":["import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge(...args) {\n    const scheduler = popScheduler(args);\n    const concurrent = popNumber(args, Infinity);\n    const sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent = Infinity) {\n    return mergeMap(identity, concurrent);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    const buffer = [];\n    let active = 0;\n    let index = 0;\n    let isComplete = false;\n    const checkComplete = () => {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    const outerNext = (value) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n    const doInnerSub = (value) => {\n        expand && subscriber.next(value);\n        active++;\n        let innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, (innerValue) => {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, () => {\n            innerComplete = true;\n        }, undefined, () => {\n            if (innerComplete) {\n                try {\n                    active--;\n                    while (buffer.length && active < concurrent) {\n                        const bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, () => {\n        isComplete = true;\n        checkComplete();\n    }));\n    return () => {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent = Infinity) {\n    if (isFunction(resultSelector)) {\n        return mergeMap((a, i) => map((b, ii) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable((subscriber) => {\n        let i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable((subscriber) => {\n        executeSchedule(subscriber, scheduler, () => {\n            const iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                iterator.next().then((result) => {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        executeSchedule(subscriber, scheduler, () => {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                let value;\n                let done;\n                try {\n                    ({ value, done } = iterator.next());\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n","export function executeSchedule(parentSubscription, scheduler, work, delay = 0, repeat = false) {\n    const scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, ElementRef, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, Directive, EventEmitter, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, take, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n            return (!scrollable ||\n                !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement));\n        }));\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._ngZone = _ngZone;\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    const keydownEvents = overlays[i]._keydownEvents;\n                    /** @breaking-change 14.0.0 _ngZone will be required. */\n                    if (this._ngZone) {\n                        this._ngZone.run(() => keydownEvents.next(event));\n                    }\n                    else {\n                        keydownEvents.next(event);\n                    }\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n            }\n            else {\n                this._document.body.addEventListener('keydown', this._keydownListener);\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(document);\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                const outsidePointerEvents = overlayRef._outsidePointerEvents;\n                /** @breaking-change 14.0.0 _ngZone will be required. */\n                if (this._ngZone) {\n                    this._ngZone.run(() => outsidePointerEvents.next(event));\n                }\n                else {\n                    outsidePointerEvents.next(event);\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n                this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n            }\n            else {\n                this._addEventListeners(body);\n            }\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n    _addEventListeners(body) {\n        body.addEventListener('pointerdown', this._pointerDownListener, true);\n        body.addEventListener('click', this._clickListener, true);\n        body.addEventListener('auxclick', this._clickListener, true);\n        body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; } });\n\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsDisabled = _animationsDisabled;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        this._backdropTransitionendHandler = (event) => {\n            this._disposeBackdrop(event.target);\n        };\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        // Insert the host into the DOM before attaching the portal, otherwise\n        // the animations module will skip animations on repeat attachments.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        const attachResult = this._portalOutlet.attach(portal);\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n        // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n        // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n        if (typeof attachResult?.onDestroy === 'function') {\n            // In most cases we control the portal and we know when it is being detached so that\n            // we can finish the disposal process. The exception is if the user passes in a custom\n            // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n            // `detach` here instead of `dispose`, because we don't know if the user intends to\n            // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n            attachResult.onDestroy(() => {\n                if (this.hasAttached()) {\n                    // We have to delay the `detach` call, because detaching immediately prevents\n                    // other destroy hooks from running. This is likely a framework bug similar to\n                    // https://github.com/angular/angular/issues/46119\n                    this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n                }\n            });\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        this._host?.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = { ...this._config, ...sizeConfig };\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = { ...this._config, direction: dir };\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._animationsDisabled) {\n            this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n        }\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        if (this._animationsDisabled) {\n            this._disposeBackdrop(backdropToDetach);\n            return;\n        }\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n            this._disposeBackdrop(backdropToDetach);\n        }, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.removeEventListener('click', this._backdropClickHandler);\n            backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n        if (this._backdropTimeout) {\n            clearTimeout(this._backdropTimeout);\n            this._backdropTimeout = undefined;\n        }\n    }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin, the overlay and the container to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        const containerRect = this._containerRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        const lastPosition = this._lastPosition;\n        if (lastPosition) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n            const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n        else {\n            this.apply();\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, containerRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        // When zooming in Safari the container rectangle contains negative values for the position\n        // and we need to re-add them to the calculated coordinates.\n        if (containerRect.left < 0) {\n            x -= containerRect.left;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n        // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        // Additionally, when zooming in Safari this fixes the vertical position.\n        if (containerRect.top < 0) {\n            y -= containerRect.top;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlay at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param rawOverlayRect Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stretches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breaking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [\n    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [\n    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._alignItems = '';\n        this._xPosition = '';\n        this._xOffset = '';\n        this._width = '';\n        this._height = '';\n        this._isDisposed = false;\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'left';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'right';\n        return this;\n    }\n    /**\n     * Sets the overlay to the start of the viewport, depending on the overlay direction.\n     * This will be to the left in LTR layouts and to the right in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    start(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'start';\n        return this;\n    }\n    /**\n     * Sets the overlay to the end of the viewport, depending on the overlay direction.\n     * This will be to the right in LTR layouts and to the left in RTL.\n     * @param offset Offset from the edge of the screen.\n     */\n    end(value = '') {\n        this._xOffset = value;\n        this._xPosition = 'end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._xPosition = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        const xPosition = this._xPosition;\n        const xOffset = this._xOffset;\n        const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n        let marginLeft = '';\n        let marginRight = '';\n        let justifyContent = '';\n        if (shouldBeFlushHorizontally) {\n            justifyContent = 'flex-start';\n        }\n        else if (xPosition === 'center') {\n            justifyContent = 'center';\n            if (isRtl) {\n                marginRight = xOffset;\n            }\n            else {\n                marginLeft = xOffset;\n            }\n        }\n        else if (isRtl) {\n            if (xPosition === 'left' || xPosition === 'end') {\n                justifyContent = 'flex-end';\n                marginLeft = xOffset;\n            }\n            else if (xPosition === 'right' || xPosition === 'start') {\n                justifyContent = 'flex-start';\n                marginRight = xOffset;\n            }\n        }\n        else if (xPosition === 'left' || xPosition === 'start') {\n            justifyContent = 'flex-start';\n            marginLeft = xOffset;\n        }\n        else if (xPosition === 'right' || xPosition === 'end') {\n            justifyContent = 'flex-end';\n            marginRight = xOffset;\n        }\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n        parentStyles.justifyContent = justifyContent;\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }, { type: OverlayContainer }]; } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations');\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Overlay, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkOverlayOrigin, isStandalone: true, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkConnectedOverlay, isStandalone: true, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\nclass OverlayModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayModule, imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule, CdkConnectedOverlay, CdkOverlayOrigin],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n"],"names":["Observable","EMPTY","subscriber","complete","empty","scheduler","emptyScheduled","schedule","scheduled","innerFrom","from","input","mergeAll","popNumber","popScheduler","merge","args","concurrent","Infinity","sources","length","operate","createOperatorSubscriber","filter","predicate","thisArg","source","index","subscribe","value","call","next","map","project","mergeMap","identity","executeSchedule","mergeInternals","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","isComplete","checkComplete","outerNext","doInnerSub","push","innerComplete","innerValue","undefined","bufferedValue","shift","err","error","isFunction","resultSelector","a","i","b","ii","observeOn","delay","subscribeOn","add","take","count","seen","noop","takeUntil","notifier","closed","takeWhile","inclusive","result","scheduleArray","scheduleAsyncIterable","Error","iterator","Symbol","asyncIterator","then","done","Symbol_iterator","scheduleIterable","return","scheduleObservable","pipe","schedulePromise","readableStreamLikeToAsyncGenerator","scheduleReadableStreamLike","isInteropObservable","isPromise","isArrayLike","isIterable","isAsyncIterable","createInvalidObservableTypeError","isReadableStreamLike","isScheduler","last","arr","popResultSelector","pop","defaultValue","parentSubscription","work","repeat","scheduleSubscription","unsubscribe","i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","i0","Injectable","Inject","Optional","ElementRef","ApplicationRef","ANIMATION_MODULE_TYPE","InjectionToken","Directive","EventEmitter","Input","Output","NgModule","coerceCssPixelValue","coerceArray","coerceBooleanProperty","i1$1","supportsScrollBehavior","_getEventTarget","_isTestEnvironment","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","Subject","Subscription","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","constructor","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","detach","overlayRef","ngDevMode","stream","scrolled","scrollable","overlayElement","getElementRef","nativeElement","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","getBoundingClientRect","parentRects","ScrollStrategyOptions","close","config","block","reposition","_","ɵfac","ScrollStrategyOptions_Factory","t","ɵɵinject","NgZone","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","type","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","BaseOverlayDispatcher","_attachedOverlays","ngOnDestroy","indexOf","splice","BaseOverlayDispatcher_Factory","OverlayKeyboardDispatcher","_keydownListener","event","overlays","_keydownEvents","observers","keydownEvents","_isAttached","runOutsideAngular","addEventListener","removeEventListener","OverlayKeyboardDispatcher_Factory","OverlayOutsideClickDispatcher","_platform","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","_outsidePointerEvents","outsidePointerEvents","_addEventListeners","IOS","_cursorOriginalValue","cursor","OverlayOutsideClickDispatcher_Factory","Platform","OverlayContainer","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","container","createElement","setAttribute","appendChild","OverlayContainer_Factory","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_animationsDisabled","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_backdropTransitionendHandler","_disposeBackdrop","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","parentElement","_previousHostParent","attachResult","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","onDestroy","Promise","resolve","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","backdropClick","attachments","detachments","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","insertBefore","requestAnimationFrame","nextSibling","parentNode","backdropToDetach","_backdropTimeout","setTimeout","cssClasses","isAdd","c","subscription","children","backdrop","clearTimeout","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","positions","_preferredPositions","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","_containerRect","originRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","forEach","pair","cssClass","Element","destination","hasOwnProperty","units","split","parseFloat","clientRect","floor","STANDARD_DROPDOWN_BELOW_POSITIONS","STANDARD_DROPDOWN_ADJACENT_POSITIONS","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_alignItems","_xPosition","_xOffset","_width","_height","end","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","marginLeft","marginRight","marginTop","marginBottom","parent","OverlayPositionBuilder","global","flexibleConnectedTo","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_animationsModuleType","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","Overlay_Factory","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","CdkOverlayOrigin_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","exportAs","standalone","CdkConnectedOverlay","_position","_updatePositionStrategy","_hasBackdrop","lockPosition","_lockPosition","_flexibleDimensions","_push","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","CdkConnectedOverlay_Factory","TemplateRef","ViewContainerRef","inputs","outputs","features","ɵɵNgOnChangesFeature","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","OverlayModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","imports","exports","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}