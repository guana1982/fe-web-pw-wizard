{"version":3,"file":"node_modules_ngrx_store-devtools_fesm2022_ngrx-store-devtools_mjs-_f60c0.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/operators/scan.js","./node_modules/rxjs/dist/esm/internal/operators/scanInternals.js","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/rxjs/dist/esm/internal/operators/timeout.js","./node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","./node_modules/rxjs/dist/esm/internal/scheduler/QueueAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/QueueScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/queue.js","./node_modules/@ngrx/store-devtools/fesm2022/ngrx-store-devtools.mjs"],"sourcesContent":["import { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\nexport function scan(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, true));\n}\n","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return (source, subscriber) => {\n        let hasState = hasSeed;\n        let state = seed;\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (() => {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport const TimeoutError = createErrorClass((_super) => function TimeoutErrorImpl(info = null) {\n    _super(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    this.info = info;\n});\nexport function timeout(config, schedulerArg) {\n    const { first, each, with: _with = timeoutErrorFactory, scheduler = schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : asyncScheduler, meta = null, } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config);\n    if (first == null && each == null) {\n        throw new TypeError('No timeout provided.');\n    }\n    return operate((source, subscriber) => {\n        let originalSourceSubscription;\n        let timerSubscription;\n        let lastValue = null;\n        let seen = 0;\n        const startTimer = (delay) => {\n            timerSubscription = executeSchedule(subscriber, scheduler, () => {\n                try {\n                    originalSourceSubscription.unsubscribe();\n                    innerFrom(_with({\n                        meta,\n                        lastValue,\n                        seen,\n                    })).subscribe(subscriber);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }, delay);\n        };\n        originalSourceSubscription = source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            seen++;\n            subscriber.next((lastValue = value));\n            each > 0 && startTimer(each);\n        }, undefined, undefined, () => {\n            if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {\n                timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();\n            }\n            lastValue = null;\n        }));\n        !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler.now()) : each);\n    });\n}\nfunction timeoutErrorFactory(info) {\n    throw new TimeoutError(info);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import { AsyncAction } from './AsyncAction';\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.flush(this);\n        return 0;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport const queueScheduler = new QueueScheduler(QueueAction);\nexport const queue = queueScheduler;\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, NgZone, Injectable, Inject, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport * as i2 from '@ngrx/store';\nimport { ActionsSubject, UPDATE, INIT, INITIAL_STATE, StateObservable, ReducerManagerDispatcher } from '@ngrx/store';\nimport { EMPTY, Observable, of, merge, queueScheduler, ReplaySubject } from 'rxjs';\nimport { share, filter, map, concatMap, timeout, debounceTime, catchError, take, takeUntil, switchMap, skip, observeOn, withLatestFrom, scan } from 'rxjs/operators';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\nconst PERFORM_ACTION = 'PERFORM_ACTION';\nconst REFRESH = 'REFRESH';\nconst RESET = 'RESET';\nconst ROLLBACK = 'ROLLBACK';\nconst COMMIT = 'COMMIT';\nconst SWEEP = 'SWEEP';\nconst TOGGLE_ACTION = 'TOGGLE_ACTION';\nconst SET_ACTIONS_ACTIVE = 'SET_ACTIONS_ACTIVE';\nconst JUMP_TO_STATE = 'JUMP_TO_STATE';\nconst JUMP_TO_ACTION = 'JUMP_TO_ACTION';\nconst IMPORT_STATE = 'IMPORT_STATE';\nconst LOCK_CHANGES = 'LOCK_CHANGES';\nconst PAUSE_RECORDING = 'PAUSE_RECORDING';\nclass PerformAction {\n    constructor(action, timestamp) {\n        this.action = action;\n        this.timestamp = timestamp;\n        this.type = PERFORM_ACTION;\n        if (typeof action.type === 'undefined') {\n            throw new Error('Actions may not have an undefined \"type\" property. ' +\n                'Have you misspelled a constant?');\n        }\n    }\n}\nclass Refresh {\n    constructor() {\n        this.type = REFRESH;\n    }\n}\nclass Reset {\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = RESET;\n    }\n}\nclass Rollback {\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = ROLLBACK;\n    }\n}\nclass Commit {\n    constructor(timestamp) {\n        this.timestamp = timestamp;\n        this.type = COMMIT;\n    }\n}\nclass Sweep {\n    constructor() {\n        this.type = SWEEP;\n    }\n}\nclass ToggleAction {\n    constructor(id) {\n        this.id = id;\n        this.type = TOGGLE_ACTION;\n    }\n}\nclass SetActionsActive {\n    constructor(start, end, active = true) {\n        this.start = start;\n        this.end = end;\n        this.active = active;\n        this.type = SET_ACTIONS_ACTIVE;\n    }\n}\nclass JumpToState {\n    constructor(index) {\n        this.index = index;\n        this.type = JUMP_TO_STATE;\n    }\n}\nclass JumpToAction {\n    constructor(actionId) {\n        this.actionId = actionId;\n        this.type = JUMP_TO_ACTION;\n    }\n}\nclass ImportState {\n    constructor(nextLiftedState) {\n        this.nextLiftedState = nextLiftedState;\n        this.type = IMPORT_STATE;\n    }\n}\nclass LockChanges {\n    constructor(status) {\n        this.status = status;\n        this.type = LOCK_CHANGES;\n    }\n}\nclass PauseRecording {\n    constructor(status) {\n        this.status = status;\n        this.type = PAUSE_RECORDING;\n    }\n}\n\n/**\n * Chrome extension documentation\n * @see https://github.com/reduxjs/redux-devtools/blob/main/extension/docs/API/Arguments.md\n * Firefox extension documentation\n * @see https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md\n */\nclass StoreDevtoolsConfig {\n    constructor() {\n        /**\n         * Maximum allowed actions to be stored in the history tree (default: `false`)\n         */\n        this.maxAge = false;\n    }\n}\nconst STORE_DEVTOOLS_CONFIG = new InjectionToken('@ngrx/store-devtools Options');\n/**\n * Used to provide a `StoreDevtoolsConfig` for the store-devtools.\n */\nconst INITIAL_OPTIONS = new InjectionToken('@ngrx/store-devtools Initial Config');\nfunction noMonitor() {\n    return null;\n}\nconst DEFAULT_NAME = 'NgRx Store DevTools';\nfunction createConfig(optionsInput) {\n    const DEFAULT_OPTIONS = {\n        maxAge: false,\n        monitor: noMonitor,\n        actionSanitizer: undefined,\n        stateSanitizer: undefined,\n        name: DEFAULT_NAME,\n        serialize: false,\n        logOnly: false,\n        autoPause: false,\n        trace: false,\n        traceLimit: 75,\n        // Add all features explicitly. This prevent buggy behavior for\n        // options like \"lock\" which might otherwise not show up.\n        features: {\n            pause: true,\n            lock: true,\n            persist: true,\n            export: true,\n            import: 'custom',\n            jump: true,\n            skip: true,\n            reorder: true,\n            dispatch: true,\n            test: true, // Generate tests for the selected actions\n        },\n        connectOutsideZone: false,\n    };\n    const options = typeof optionsInput === 'function' ? optionsInput() : optionsInput;\n    const logOnly = options.logOnly\n        ? { pause: true, export: true, test: true }\n        : false;\n    const features = options.features ||\n        logOnly ||\n        DEFAULT_OPTIONS.features;\n    if (features.import === true) {\n        features.import = 'custom';\n    }\n    const config = Object.assign({}, DEFAULT_OPTIONS, { features }, options);\n    if (config.maxAge && config.maxAge < 2) {\n        throw new Error(`Devtools 'maxAge' cannot be less than 2, got ${config.maxAge}`);\n    }\n    return config;\n}\n\nfunction difference(first, second) {\n    return first.filter((item) => second.indexOf(item) < 0);\n}\n/**\n * Provides an app's view into the state of the lifted store.\n */\nfunction unliftState(liftedState) {\n    const { computedStates, currentStateIndex } = liftedState;\n    // At start up NgRx dispatches init actions,\n    // When these init actions are being filtered out by the predicate or safe/block list options\n    // we don't have a complete computed states yet.\n    // At this point it could happen that we're out of bounds, when this happens we fall back to the last known state\n    if (currentStateIndex >= computedStates.length) {\n        const { state } = computedStates[computedStates.length - 1];\n        return state;\n    }\n    const { state } = computedStates[currentStateIndex];\n    return state;\n}\nfunction unliftAction(liftedState) {\n    return liftedState.actionsById[liftedState.nextActionId - 1];\n}\n/**\n * Lifts an app's action into an action on the lifted store.\n */\nfunction liftAction(action) {\n    return new PerformAction(action, +Date.now());\n}\n/**\n * Sanitizes given actions with given function.\n */\nfunction sanitizeActions(actionSanitizer, actions) {\n    return Object.keys(actions).reduce((sanitizedActions, actionIdx) => {\n        const idx = Number(actionIdx);\n        sanitizedActions[idx] = sanitizeAction(actionSanitizer, actions[idx], idx);\n        return sanitizedActions;\n    }, {});\n}\n/**\n * Sanitizes given action with given function.\n */\nfunction sanitizeAction(actionSanitizer, action, actionIdx) {\n    return {\n        ...action,\n        action: actionSanitizer(action.action, actionIdx),\n    };\n}\n/**\n * Sanitizes given states with given function.\n */\nfunction sanitizeStates(stateSanitizer, states) {\n    return states.map((computedState, idx) => ({\n        state: sanitizeState(stateSanitizer, computedState.state, idx),\n        error: computedState.error,\n    }));\n}\n/**\n * Sanitizes given state with given function.\n */\nfunction sanitizeState(stateSanitizer, state, stateIdx) {\n    return stateSanitizer(state, stateIdx);\n}\n/**\n * Read the config and tell if actions should be filtered\n */\nfunction shouldFilterActions(config) {\n    return config.predicate || config.actionsSafelist || config.actionsBlocklist;\n}\n/**\n * Return a full filtered lifted state\n */\nfunction filterLiftedState(liftedState, predicate, safelist, blocklist) {\n    const filteredStagedActionIds = [];\n    const filteredActionsById = {};\n    const filteredComputedStates = [];\n    liftedState.stagedActionIds.forEach((id, idx) => {\n        const liftedAction = liftedState.actionsById[id];\n        if (!liftedAction)\n            return;\n        if (idx &&\n            isActionFiltered(liftedState.computedStates[idx], liftedAction, predicate, safelist, blocklist)) {\n            return;\n        }\n        filteredActionsById[id] = liftedAction;\n        filteredStagedActionIds.push(id);\n        filteredComputedStates.push(liftedState.computedStates[idx]);\n    });\n    return {\n        ...liftedState,\n        stagedActionIds: filteredStagedActionIds,\n        actionsById: filteredActionsById,\n        computedStates: filteredComputedStates,\n    };\n}\n/**\n * Return true is the action should be ignored\n */\nfunction isActionFiltered(state, action, predicate, safelist, blockedlist) {\n    const predicateMatch = predicate && !predicate(state, action.action);\n    const safelistMatch = safelist &&\n        !action.action.type.match(safelist.map((s) => escapeRegExp(s)).join('|'));\n    const blocklistMatch = blockedlist &&\n        action.action.type.match(blockedlist.map((s) => escapeRegExp(s)).join('|'));\n    return predicateMatch || safelistMatch || blocklistMatch;\n}\n/**\n * Return string with escaped RegExp special characters\n * https://stackoverflow.com/a/6969486/1337347\n */\nfunction escapeRegExp(s) {\n    return s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction injectZoneConfig(connectOutsideZone) {\n    const ngZone = connectOutsideZone ? inject(NgZone) : null;\n    return { ngZone, connectOutsideZone };\n}\n\nclass DevtoolsDispatcher extends ActionsSubject {\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsDispatcher, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsDispatcher }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsDispatcher, decorators: [{\n            type: Injectable\n        }] });\n\nconst ExtensionActionTypes = {\n    START: 'START',\n    DISPATCH: 'DISPATCH',\n    STOP: 'STOP',\n    ACTION: 'ACTION',\n};\nconst REDUX_DEVTOOLS_EXTENSION = new InjectionToken('@ngrx/store-devtools Redux Devtools Extension');\nclass DevtoolsExtension {\n    constructor(devtoolsExtension, config, dispatcher) {\n        this.config = config;\n        this.dispatcher = dispatcher;\n        this.zoneConfig = injectZoneConfig(this.config.connectOutsideZone);\n        this.devtoolsExtension = devtoolsExtension;\n        this.createActionStreams();\n    }\n    notify(action, state) {\n        if (!this.devtoolsExtension) {\n            return;\n        }\n        // Check to see if the action requires a full update of the liftedState.\n        // If it is a simple action generated by the user's app and the recording\n        // is not locked/paused, only send the action and the current state (fast).\n        //\n        // A full liftedState update (slow: serializes the entire liftedState) is\n        // only required when:\n        //   a) redux-devtools-extension fires the @@Init action (ignored by\n        //      @ngrx/store-devtools)\n        //   b) an action is generated by an @ngrx module (e.g. @ngrx/effects/init\n        //      or @ngrx/store/update-reducers)\n        //   c) the state has been recomputed due to time-traveling\n        //   d) any action that is not a PerformAction to err on the side of\n        //      caution.\n        if (action.type === PERFORM_ACTION) {\n            if (state.isLocked || state.isPaused) {\n                return;\n            }\n            const currentState = unliftState(state);\n            if (shouldFilterActions(this.config) &&\n                isActionFiltered(currentState, action, this.config.predicate, this.config.actionsSafelist, this.config.actionsBlocklist)) {\n                return;\n            }\n            const sanitizedState = this.config.stateSanitizer\n                ? sanitizeState(this.config.stateSanitizer, currentState, state.currentStateIndex)\n                : currentState;\n            const sanitizedAction = this.config.actionSanitizer\n                ? sanitizeAction(this.config.actionSanitizer, action, state.nextActionId)\n                : action;\n            this.sendToReduxDevtools(() => this.extensionConnection.send(sanitizedAction, sanitizedState));\n        }\n        else {\n            // Requires full state update\n            const sanitizedLiftedState = {\n                ...state,\n                stagedActionIds: state.stagedActionIds,\n                actionsById: this.config.actionSanitizer\n                    ? sanitizeActions(this.config.actionSanitizer, state.actionsById)\n                    : state.actionsById,\n                computedStates: this.config.stateSanitizer\n                    ? sanitizeStates(this.config.stateSanitizer, state.computedStates)\n                    : state.computedStates,\n            };\n            this.sendToReduxDevtools(() => this.devtoolsExtension.send(null, sanitizedLiftedState, this.getExtensionConfig(this.config)));\n        }\n    }\n    createChangesObservable() {\n        if (!this.devtoolsExtension) {\n            return EMPTY;\n        }\n        return new Observable((subscriber) => {\n            const connection = this.zoneConfig.connectOutsideZone\n                ? // To reduce change detection cycles, we need to run the `connect` method\n                    // outside of the Angular zone. The `connect` method adds a `message`\n                    // event listener to communicate with an extension using `window.postMessage`\n                    // and handle message events.\n                    this.zoneConfig.ngZone.runOutsideAngular(() => this.devtoolsExtension.connect(this.getExtensionConfig(this.config)))\n                : this.devtoolsExtension.connect(this.getExtensionConfig(this.config));\n            this.extensionConnection = connection;\n            connection.init();\n            connection.subscribe((change) => subscriber.next(change));\n            return connection.unsubscribe;\n        });\n    }\n    createActionStreams() {\n        // Listens to all changes\n        const changes$ = this.createChangesObservable().pipe(share());\n        // Listen for the start action\n        const start$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.START));\n        // Listen for the stop action\n        const stop$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.STOP));\n        // Listen for lifted actions\n        const liftedActions$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.DISPATCH), map((change) => this.unwrapAction(change.payload)), concatMap((action) => {\n            if (action.type === IMPORT_STATE) {\n                // State imports may happen in two situations:\n                // 1. Explicitly by user\n                // 2. User activated the \"persist state accross reloads\" option\n                //    and now the state is imported during reload.\n                // Because of option 2, we need to give possible\n                // lazy loaded reducers time to instantiate.\n                // As soon as there is no UPDATE action within 1 second,\n                // it is assumed that all reducers are loaded.\n                return this.dispatcher.pipe(filter((action) => action.type === UPDATE), timeout(1000), debounceTime(1000), map(() => action), catchError(() => of(action)), take(1));\n            }\n            else {\n                return of(action);\n            }\n        }));\n        // Listen for unlifted actions\n        const actions$ = changes$.pipe(filter((change) => change.type === ExtensionActionTypes.ACTION), map((change) => this.unwrapAction(change.payload)));\n        const actionsUntilStop$ = actions$.pipe(takeUntil(stop$));\n        const liftedUntilStop$ = liftedActions$.pipe(takeUntil(stop$));\n        this.start$ = start$.pipe(takeUntil(stop$));\n        // Only take the action sources between the start/stop events\n        this.actions$ = this.start$.pipe(switchMap(() => actionsUntilStop$));\n        this.liftedActions$ = this.start$.pipe(switchMap(() => liftedUntilStop$));\n    }\n    unwrapAction(action) {\n        return typeof action === 'string' ? eval(`(${action})`) : action;\n    }\n    getExtensionConfig(config) {\n        const extensionOptions = {\n            name: config.name,\n            features: config.features,\n            serialize: config.serialize,\n            autoPause: config.autoPause ?? false,\n            trace: config.trace ?? false,\n            traceLimit: config.traceLimit ?? 75,\n            // The action/state sanitizers are not added to the config\n            // because sanitation is done in this class already.\n            // It is done before sending it to the devtools extension for consistency:\n            // - If we call extensionConnection.send(...),\n            //   the extension would call the sanitizers.\n            // - If we call devtoolsExtension.send(...) (aka full state update),\n            //   the extension would NOT call the sanitizers, so we have to do it ourselves.\n        };\n        if (config.maxAge !== false /* support === 0 */) {\n            extensionOptions.maxAge = config.maxAge;\n        }\n        return extensionOptions;\n    }\n    sendToReduxDevtools(send) {\n        try {\n            send();\n        }\n        catch (err) {\n            console.warn('@ngrx/store-devtools: something went wrong inside the redux devtools', err);\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsExtension, deps: [{ token: REDUX_DEVTOOLS_EXTENSION }, { token: STORE_DEVTOOLS_CONFIG }, { token: DevtoolsDispatcher }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsExtension }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: DevtoolsExtension, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REDUX_DEVTOOLS_EXTENSION]\n                }] }, { type: StoreDevtoolsConfig, decorators: [{\n                    type: Inject,\n                    args: [STORE_DEVTOOLS_CONFIG]\n                }] }, { type: DevtoolsDispatcher }]; } });\n\nconst INIT_ACTION = { type: INIT };\nconst RECOMPUTE = '@ngrx/store-devtools/recompute';\nconst RECOMPUTE_ACTION = { type: RECOMPUTE };\n/**\n * Computes the next entry in the log by applying an action.\n */\nfunction computeNextEntry(reducer, action, state, error, errorHandler) {\n    if (error) {\n        return {\n            state,\n            error: 'Interrupted by an error up the chain',\n        };\n    }\n    let nextState = state;\n    let nextError;\n    try {\n        nextState = reducer(state, action);\n    }\n    catch (err) {\n        nextError = err.toString();\n        errorHandler.handleError(err);\n    }\n    return {\n        state: nextState,\n        error: nextError,\n    };\n}\n/**\n * Runs the reducer on invalidated actions to get a fresh computation log.\n */\nfunction recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused) {\n    // Optimization: exit early and return the same reference\n    // if we know nothing could have changed.\n    if (minInvalidatedStateIndex >= computedStates.length &&\n        computedStates.length === stagedActionIds.length) {\n        return computedStates;\n    }\n    const nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);\n    // If the recording is paused, recompute all states up until the pause state,\n    // else recompute all states.\n    const lastIncludedActionId = stagedActionIds.length - (isPaused ? 1 : 0);\n    for (let i = minInvalidatedStateIndex; i < lastIncludedActionId; i++) {\n        const actionId = stagedActionIds[i];\n        const action = actionsById[actionId].action;\n        const previousEntry = nextComputedStates[i - 1];\n        const previousState = previousEntry ? previousEntry.state : committedState;\n        const previousError = previousEntry ? previousEntry.error : undefined;\n        const shouldSkip = skippedActionIds.indexOf(actionId) > -1;\n        const entry = shouldSkip\n            ? previousEntry\n            : computeNextEntry(reducer, action, previousState, previousError, errorHandler);\n        nextComputedStates.push(entry);\n    }\n    // If the recording is paused, the last state will not be recomputed,\n    // because it's essentially not part of the state history.\n    if (isPaused) {\n        nextComputedStates.push(computedStates[computedStates.length - 1]);\n    }\n    return nextComputedStates;\n}\nfunction liftInitialState(initialCommittedState, monitorReducer) {\n    return {\n        monitorState: monitorReducer(undefined, {}),\n        nextActionId: 1,\n        actionsById: { 0: liftAction(INIT_ACTION) },\n        stagedActionIds: [0],\n        skippedActionIds: [],\n        committedState: initialCommittedState,\n        currentStateIndex: 0,\n        computedStates: [],\n        isLocked: false,\n        isPaused: false,\n    };\n}\n/**\n * Creates a history state reducer from an app's reducer.\n */\nfunction liftReducerWith(initialCommittedState, initialLiftedState, errorHandler, monitorReducer, options = {}) {\n    /**\n     * Manages how the history actions modify the history state.\n     */\n    return (reducer) => (liftedState, liftedAction) => {\n        let { monitorState, actionsById, nextActionId, stagedActionIds, skippedActionIds, committedState, currentStateIndex, computedStates, isLocked, isPaused, } = liftedState || initialLiftedState;\n        if (!liftedState) {\n            // Prevent mutating initialLiftedState\n            actionsById = Object.create(actionsById);\n        }\n        function commitExcessActions(n) {\n            // Auto-commits n-number of excess actions.\n            let excess = n;\n            let idsToDelete = stagedActionIds.slice(1, excess + 1);\n            for (let i = 0; i < idsToDelete.length; i++) {\n                if (computedStates[i + 1].error) {\n                    // Stop if error is found. Commit actions up to error.\n                    excess = i;\n                    idsToDelete = stagedActionIds.slice(1, excess + 1);\n                    break;\n                }\n                else {\n                    delete actionsById[idsToDelete[i]];\n                }\n            }\n            skippedActionIds = skippedActionIds.filter((id) => idsToDelete.indexOf(id) === -1);\n            stagedActionIds = [0, ...stagedActionIds.slice(excess + 1)];\n            committedState = computedStates[excess].state;\n            computedStates = computedStates.slice(excess);\n            currentStateIndex =\n                currentStateIndex > excess ? currentStateIndex - excess : 0;\n        }\n        function commitChanges() {\n            // Consider the last committed state the new starting point.\n            // Squash any staged actions into a single committed state.\n            actionsById = { 0: liftAction(INIT_ACTION) };\n            nextActionId = 1;\n            stagedActionIds = [0];\n            skippedActionIds = [];\n            committedState = computedStates[currentStateIndex].state;\n            currentStateIndex = 0;\n            computedStates = [];\n        }\n        // By default, aggressively recompute every state whatever happens.\n        // This has O(n) performance, so we'll override this to a sensible\n        // value whenever we feel like we don't have to recompute the states.\n        let minInvalidatedStateIndex = 0;\n        switch (liftedAction.type) {\n            case LOCK_CHANGES: {\n                isLocked = liftedAction.status;\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n            case PAUSE_RECORDING: {\n                isPaused = liftedAction.status;\n                if (isPaused) {\n                    // Add a pause action to signal the devtools-user the recording is paused.\n                    // The corresponding state will be overwritten on each update to always contain\n                    // the latest state (see Actions.PERFORM_ACTION).\n                    stagedActionIds = [...stagedActionIds, nextActionId];\n                    actionsById[nextActionId] = new PerformAction({\n                        type: '@ngrx/devtools/pause',\n                    }, +Date.now());\n                    nextActionId++;\n                    minInvalidatedStateIndex = stagedActionIds.length - 1;\n                    computedStates = computedStates.concat(computedStates[computedStates.length - 1]);\n                    if (currentStateIndex === stagedActionIds.length - 2) {\n                        currentStateIndex++;\n                    }\n                    minInvalidatedStateIndex = Infinity;\n                }\n                else {\n                    commitChanges();\n                }\n                break;\n            }\n            case RESET: {\n                // Get back to the state the store was created with.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                committedState = initialCommittedState;\n                currentStateIndex = 0;\n                computedStates = [];\n                break;\n            }\n            case COMMIT: {\n                commitChanges();\n                break;\n            }\n            case ROLLBACK: {\n                // Forget about any staged actions.\n                // Start again from the last committed state.\n                actionsById = { 0: liftAction(INIT_ACTION) };\n                nextActionId = 1;\n                stagedActionIds = [0];\n                skippedActionIds = [];\n                currentStateIndex = 0;\n                computedStates = [];\n                break;\n            }\n            case TOGGLE_ACTION: {\n                // Toggle whether an action with given ID is skipped.\n                // Being skipped means it is a no-op during the computation.\n                const { id: actionId } = liftedAction;\n                const index = skippedActionIds.indexOf(actionId);\n                if (index === -1) {\n                    skippedActionIds = [actionId, ...skippedActionIds];\n                }\n                else {\n                    skippedActionIds = skippedActionIds.filter((id) => id !== actionId);\n                }\n                // Optimization: we know history before this action hasn't changed\n                minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);\n                break;\n            }\n            case SET_ACTIONS_ACTIVE: {\n                // Toggle whether an action with given ID is skipped.\n                // Being skipped means it is a no-op during the computation.\n                const { start, end, active } = liftedAction;\n                const actionIds = [];\n                for (let i = start; i < end; i++)\n                    actionIds.push(i);\n                if (active) {\n                    skippedActionIds = difference(skippedActionIds, actionIds);\n                }\n                else {\n                    skippedActionIds = [...skippedActionIds, ...actionIds];\n                }\n                // Optimization: we know history before this action hasn't changed\n                minInvalidatedStateIndex = stagedActionIds.indexOf(start);\n                break;\n            }\n            case JUMP_TO_STATE: {\n                // Without recomputing anything, move the pointer that tell us\n                // which state is considered the current one. Useful for sliders.\n                currentStateIndex = liftedAction.index;\n                // Optimization: we know the history has not changed.\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n            case JUMP_TO_ACTION: {\n                // Jumps to a corresponding state to a specific action.\n                // Useful when filtering actions.\n                const index = stagedActionIds.indexOf(liftedAction.actionId);\n                if (index !== -1)\n                    currentStateIndex = index;\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n            case SWEEP: {\n                // Forget any actions that are currently being skipped.\n                stagedActionIds = difference(stagedActionIds, skippedActionIds);\n                skippedActionIds = [];\n                currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);\n                break;\n            }\n            case PERFORM_ACTION: {\n                // Ignore action and return state as is if recording is locked\n                if (isLocked) {\n                    return liftedState || initialLiftedState;\n                }\n                if (isPaused ||\n                    (liftedState &&\n                        isActionFiltered(liftedState.computedStates[currentStateIndex], liftedAction, options.predicate, options.actionsSafelist, options.actionsBlocklist))) {\n                    // If recording is paused or if the action should be ignored, overwrite the last state\n                    // (corresponds to the pause action) and keep everything else as is.\n                    // This way, the app gets the new current state while the devtools\n                    // do not record another action.\n                    const lastState = computedStates[computedStates.length - 1];\n                    computedStates = [\n                        ...computedStates.slice(0, -1),\n                        computeNextEntry(reducer, liftedAction.action, lastState.state, lastState.error, errorHandler),\n                    ];\n                    minInvalidatedStateIndex = Infinity;\n                    break;\n                }\n                // Auto-commit as new actions come in.\n                if (options.maxAge && stagedActionIds.length === options.maxAge) {\n                    commitExcessActions(1);\n                }\n                if (currentStateIndex === stagedActionIds.length - 1) {\n                    currentStateIndex++;\n                }\n                const actionId = nextActionId++;\n                // Mutation! This is the hottest path, and we optimize on purpose.\n                // It is safe because we set a new key in a cache dictionary.\n                actionsById[actionId] = liftedAction;\n                stagedActionIds = [...stagedActionIds, actionId];\n                // Optimization: we know that only the new action needs computing.\n                minInvalidatedStateIndex = stagedActionIds.length - 1;\n                break;\n            }\n            case IMPORT_STATE: {\n                // Completely replace everything.\n                ({\n                    monitorState,\n                    actionsById,\n                    nextActionId,\n                    stagedActionIds,\n                    skippedActionIds,\n                    committedState,\n                    currentStateIndex,\n                    computedStates,\n                    isLocked,\n                    isPaused,\n                } = liftedAction.nextLiftedState);\n                break;\n            }\n            case INIT: {\n                // Always recompute states on hot reload and init.\n                minInvalidatedStateIndex = 0;\n                if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                    // States must be recomputed before committing excess.\n                    computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                    commitExcessActions(stagedActionIds.length - options.maxAge);\n                    // Avoid double computation.\n                    minInvalidatedStateIndex = Infinity;\n                }\n                break;\n            }\n            case UPDATE: {\n                const stateHasErrors = computedStates.filter((state) => state.error).length > 0;\n                if (stateHasErrors) {\n                    // Recompute all states\n                    minInvalidatedStateIndex = 0;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        // States must be recomputed before committing excess.\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                        // Avoid double computation.\n                        minInvalidatedStateIndex = Infinity;\n                    }\n                }\n                else {\n                    // If not paused/locked, add a new action to signal devtools-user\n                    // that there was a reducer update.\n                    if (!isPaused && !isLocked) {\n                        if (currentStateIndex === stagedActionIds.length - 1) {\n                            currentStateIndex++;\n                        }\n                        // Add a new action to only recompute state\n                        const actionId = nextActionId++;\n                        actionsById[actionId] = new PerformAction(liftedAction, +Date.now());\n                        stagedActionIds = [...stagedActionIds, actionId];\n                        minInvalidatedStateIndex = stagedActionIds.length - 1;\n                        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n                    }\n                    // Recompute state history with latest reducer and update action\n                    computedStates = computedStates.map((cmp) => ({\n                        ...cmp,\n                        state: reducer(cmp.state, RECOMPUTE_ACTION),\n                    }));\n                    currentStateIndex = stagedActionIds.length - 1;\n                    if (options.maxAge && stagedActionIds.length > options.maxAge) {\n                        commitExcessActions(stagedActionIds.length - options.maxAge);\n                    }\n                    // Avoid double computation.\n                    minInvalidatedStateIndex = Infinity;\n                }\n                break;\n            }\n            default: {\n                // If the action is not recognized, it's a monitor action.\n                // Optimization: a monitor action can't change history.\n                minInvalidatedStateIndex = Infinity;\n                break;\n            }\n        }\n        computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, errorHandler, isPaused);\n        monitorState = monitorReducer(monitorState, liftedAction);\n        return {\n            monitorState,\n            actionsById,\n            nextActionId,\n            stagedActionIds,\n            skippedActionIds,\n            committedState,\n            currentStateIndex,\n            computedStates,\n            isLocked,\n            isPaused,\n        };\n    };\n}\n\nclass StoreDevtools {\n    constructor(dispatcher, actions$, reducers$, extension, scannedActions, errorHandler, initialState, config) {\n        const liftedInitialState = liftInitialState(initialState, config.monitor);\n        const liftReducer = liftReducerWith(initialState, liftedInitialState, errorHandler, config.monitor, config);\n        const liftedAction$ = merge(merge(actions$.asObservable().pipe(skip(1)), extension.actions$).pipe(map(liftAction)), dispatcher, extension.liftedActions$).pipe(observeOn(queueScheduler));\n        const liftedReducer$ = reducers$.pipe(map(liftReducer));\n        const zoneConfig = injectZoneConfig(config.connectOutsideZone);\n        const liftedStateSubject = new ReplaySubject(1);\n        this.liftedStateSubscription = liftedAction$\n            .pipe(withLatestFrom(liftedReducer$), \n        // The extension would post messages back outside of the Angular zone\n        // because we call `connect()` wrapped with `runOutsideAngular`. We run change\n        // detection only once at the end after all the required asynchronous tasks have\n        // been processed (for instance, `setInterval` scheduled by the `timeout` operator).\n        // We have to re-enter the Angular zone before the `scan` since it runs the reducer\n        // which must be run within the Angular zone.\n        emitInZone(zoneConfig), scan(({ state: liftedState }, [action, reducer]) => {\n            let reducedLiftedState = reducer(liftedState, action);\n            // On full state update\n            // If we have actions filters, we must filter completely our lifted state to be sync with the extension\n            if (action.type !== PERFORM_ACTION && shouldFilterActions(config)) {\n                reducedLiftedState = filterLiftedState(reducedLiftedState, config.predicate, config.actionsSafelist, config.actionsBlocklist);\n            }\n            // Extension should be sent the sanitized lifted state\n            extension.notify(action, reducedLiftedState);\n            return { state: reducedLiftedState, action };\n        }, { state: liftedInitialState, action: null }))\n            .subscribe(({ state, action }) => {\n            liftedStateSubject.next(state);\n            if (action.type === PERFORM_ACTION) {\n                const unliftedAction = action.action;\n                scannedActions.next(unliftedAction);\n            }\n        });\n        this.extensionStartSubscription = extension.start$\n            .pipe(emitInZone(zoneConfig))\n            .subscribe(() => {\n            this.refresh();\n        });\n        const liftedState$ = liftedStateSubject.asObservable();\n        const state$ = liftedState$.pipe(map(unliftState));\n        Object.defineProperty(state$, 'state', {\n            value: toSignal(state$, { manualCleanup: true, requireSync: true }),\n        });\n        this.dispatcher = dispatcher;\n        this.liftedState = liftedState$;\n        this.state = state$;\n    }\n    ngOnDestroy() {\n        // Even though the store devtools plugin is recommended to be\n        // used only in development mode, it can still cause a memory leak\n        // in microfrontend applications that are being created and destroyed\n        // multiple times during development. This results in excessive memory\n        // consumption, as it prevents entire apps from being garbage collected.\n        this.liftedStateSubscription.unsubscribe();\n        this.extensionStartSubscription.unsubscribe();\n    }\n    dispatch(action) {\n        this.dispatcher.next(action);\n    }\n    next(action) {\n        this.dispatcher.next(action);\n    }\n    error(error) { }\n    complete() { }\n    performAction(action) {\n        this.dispatch(new PerformAction(action, +Date.now()));\n    }\n    refresh() {\n        this.dispatch(new Refresh());\n    }\n    reset() {\n        this.dispatch(new Reset(+Date.now()));\n    }\n    rollback() {\n        this.dispatch(new Rollback(+Date.now()));\n    }\n    commit() {\n        this.dispatch(new Commit(+Date.now()));\n    }\n    sweep() {\n        this.dispatch(new Sweep());\n    }\n    toggleAction(id) {\n        this.dispatch(new ToggleAction(id));\n    }\n    jumpToAction(actionId) {\n        this.dispatch(new JumpToAction(actionId));\n    }\n    jumpToState(index) {\n        this.dispatch(new JumpToState(index));\n    }\n    importState(nextLiftedState) {\n        this.dispatch(new ImportState(nextLiftedState));\n    }\n    lockChanges(status) {\n        this.dispatch(new LockChanges(status));\n    }\n    pauseRecording(status) {\n        this.dispatch(new PauseRecording(status));\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtools, deps: [{ token: DevtoolsDispatcher }, { token: i2.ActionsSubject }, { token: i2.ReducerObservable }, { token: DevtoolsExtension }, { token: i2.ScannedActionsSubject }, { token: i0.ErrorHandler }, { token: INITIAL_STATE }, { token: STORE_DEVTOOLS_CONFIG }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtools }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtools, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: DevtoolsDispatcher }, { type: i2.ActionsSubject }, { type: i2.ReducerObservable }, { type: DevtoolsExtension }, { type: i2.ScannedActionsSubject }, { type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [INITIAL_STATE]\n                }] }, { type: StoreDevtoolsConfig, decorators: [{\n                    type: Inject,\n                    args: [STORE_DEVTOOLS_CONFIG]\n                }] }]; } });\n/**\n * If the devtools extension is connected out of the Angular zone,\n * this operator will emit all events within the zone.\n */\nfunction emitInZone({ ngZone, connectOutsideZone, }) {\n    return (source) => connectOutsideZone\n        ? new Observable((subscriber) => source.subscribe({\n            next: (value) => ngZone.run(() => subscriber.next(value)),\n            error: (error) => ngZone.run(() => subscriber.error(error)),\n            complete: () => ngZone.run(() => subscriber.complete()),\n        }))\n        : source;\n}\n\nconst IS_EXTENSION_OR_MONITOR_PRESENT = new InjectionToken('@ngrx/store-devtools Is Devtools Extension or Monitor Present');\nfunction createIsExtensionOrMonitorPresent(extension, config) {\n    return Boolean(extension) || config.monitor !== noMonitor;\n}\nfunction createReduxDevtoolsExtension() {\n    const extensionKey = '__REDUX_DEVTOOLS_EXTENSION__';\n    if (typeof window === 'object' &&\n        typeof window[extensionKey] !== 'undefined') {\n        return window[extensionKey];\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Provides developer tools and instrumentation for `Store`.\n *\n * @usageNotes\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideStoreDevtools({\n *       maxAge: 25,\n *       logOnly: !isDevMode(),\n *     }),\n *   ],\n * });\n * ```\n */\nfunction provideStoreDevtools(options = {}) {\n    return makeEnvironmentProviders([\n        DevtoolsExtension,\n        DevtoolsDispatcher,\n        StoreDevtools,\n        {\n            provide: INITIAL_OPTIONS,\n            useValue: options,\n        },\n        {\n            provide: IS_EXTENSION_OR_MONITOR_PRESENT,\n            deps: [REDUX_DEVTOOLS_EXTENSION, STORE_DEVTOOLS_CONFIG],\n            useFactory: createIsExtensionOrMonitorPresent,\n        },\n        {\n            provide: REDUX_DEVTOOLS_EXTENSION,\n            useFactory: createReduxDevtoolsExtension,\n        },\n        {\n            provide: STORE_DEVTOOLS_CONFIG,\n            deps: [INITIAL_OPTIONS],\n            useFactory: createConfig,\n        },\n        {\n            provide: StateObservable,\n            deps: [StoreDevtools],\n            useFactory: createStateObservable,\n        },\n        {\n            provide: ReducerManagerDispatcher,\n            useExisting: DevtoolsDispatcher,\n        },\n    ]);\n}\n\nfunction createStateObservable(devtools) {\n    return devtools.state;\n}\nclass StoreDevtoolsModule {\n    static instrument(options = {}) {\n        return {\n            ngModule: StoreDevtoolsModule,\n            providers: [provideStoreDevtools(options)],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtoolsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtoolsModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtoolsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreDevtoolsModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_OPTIONS, RECOMPUTE, REDUX_DEVTOOLS_EXTENSION, StoreDevtools, StoreDevtoolsConfig, StoreDevtoolsModule, provideStoreDevtools };\n"],"names":["operate","scanInternals","scan","accumulator","seed","arguments","length","createOperatorSubscriber","hasSeed","emitOnNext","emitBeforeComplete","source","subscriber","hasState","state","index","subscribe","value","i","next","complete","filter","skip","count","_","asyncScheduler","isValidDate","innerFrom","createErrorClass","executeSchedule","TimeoutError","_super","TimeoutErrorImpl","info","message","name","timeout","config","schedulerArg","first","each","with","_with","timeoutErrorFactory","scheduler","meta","TypeError","originalSourceSubscription","timerSubscription","lastValue","seen","startTimer","delay","unsubscribe","err","error","undefined","closed","now","identity","noop","popResultSelector","withLatestFrom","inputs","project","len","otherValues","Array","hasValue","map","ready","every","values","AsyncAction","QueueAction","constructor","work","schedule","flush","execute","_execute","requestAsyncId","id","AsyncScheduler","QueueScheduler","queueScheduler","queue","i0","InjectionToken","inject","NgZone","Injectable","Inject","makeEnvironmentProviders","NgModule","i2","ActionsSubject","UPDATE","INIT","INITIAL_STATE","StateObservable","ReducerManagerDispatcher","EMPTY","Observable","of","merge","ReplaySubject","share","concatMap","debounceTime","catchError","take","takeUntil","switchMap","observeOn","toSignal","PERFORM_ACTION","REFRESH","RESET","ROLLBACK","COMMIT","SWEEP","TOGGLE_ACTION","SET_ACTIONS_ACTIVE","JUMP_TO_STATE","JUMP_TO_ACTION","IMPORT_STATE","LOCK_CHANGES","PAUSE_RECORDING","PerformAction","action","timestamp","type","Error","Refresh","Reset","Rollback","Commit","Sweep","ToggleAction","SetActionsActive","start","end","active","JumpToState","JumpToAction","actionId","ImportState","nextLiftedState","LockChanges","status","PauseRecording","StoreDevtoolsConfig","maxAge","STORE_DEVTOOLS_CONFIG","INITIAL_OPTIONS","noMonitor","DEFAULT_NAME","createConfig","optionsInput","DEFAULT_OPTIONS","monitor","actionSanitizer","stateSanitizer","serialize","logOnly","autoPause","trace","traceLimit","features","pause","lock","persist","export","import","jump","reorder","dispatch","test","connectOutsideZone","options","Object","assign","difference","second","item","indexOf","unliftState","liftedState","computedStates","currentStateIndex","unliftAction","actionsById","nextActionId","liftAction","Date","sanitizeActions","actions","keys","reduce","sanitizedActions","actionIdx","idx","Number","sanitizeAction","sanitizeStates","states","computedState","sanitizeState","stateIdx","shouldFilterActions","predicate","actionsSafelist","actionsBlocklist","filterLiftedState","safelist","blocklist","filteredStagedActionIds","filteredActionsById","filteredComputedStates","stagedActionIds","forEach","liftedAction","isActionFiltered","push","blockedlist","predicateMatch","safelistMatch","match","s","escapeRegExp","join","blocklistMatch","replace","injectZoneConfig","ngZone","DevtoolsDispatcher","ɵfac","ɵDevtoolsDispatcher_BaseFactory","DevtoolsDispatcher_Factory","t","ɵɵgetInheritedFactory","_2","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","ExtensionActionTypes","START","DISPATCH","STOP","ACTION","REDUX_DEVTOOLS_EXTENSION","DevtoolsExtension","devtoolsExtension","dispatcher","zoneConfig","createActionStreams","notify","isLocked","isPaused","currentState","sanitizedState","sanitizedAction","sendToReduxDevtools","extensionConnection","send","sanitizedLiftedState","getExtensionConfig","createChangesObservable","connection","runOutsideAngular","connect","init","change","changes$","pipe","start$","stop$","liftedActions$","unwrapAction","payload","actions$","actionsUntilStop$","liftedUntilStop$","eval","extensionOptions","console","warn","DevtoolsExtension_Factory","ɵɵinject","decorators","args","INIT_ACTION","RECOMPUTE","RECOMPUTE_ACTION","computeNextEntry","reducer","errorHandler","nextState","nextError","toString","handleError","recomputeStates","minInvalidatedStateIndex","committedState","skippedActionIds","nextComputedStates","slice","lastIncludedActionId","previousEntry","previousState","previousError","shouldSkip","entry","liftInitialState","initialCommittedState","monitorReducer","monitorState","liftReducerWith","initialLiftedState","create","commitExcessActions","n","excess","idsToDelete","commitChanges","Infinity","concat","actionIds","Math","min","lastState","stateHasErrors","cmp","StoreDevtools","reducers$","extension","scannedActions","initialState","liftedInitialState","liftReducer","liftedAction$","asObservable","liftedReducer$","liftedStateSubject","liftedStateSubscription","emitInZone","reducedLiftedState","unliftedAction","extensionStartSubscription","refresh","liftedState$","state$","defineProperty","manualCleanup","requireSync","ngOnDestroy","performAction","reset","rollback","commit","sweep","toggleAction","jumpToAction","jumpToState","importState","lockChanges","pauseRecording","StoreDevtools_Factory","ReducerObservable","ScannedActionsSubject","ErrorHandler","run","IS_EXTENSION_OR_MONITOR_PRESENT","createIsExtensionOrMonitorPresent","Boolean","createReduxDevtoolsExtension","extensionKey","window","provideStoreDevtools","provide","useValue","deps","useFactory","createStateObservable","useExisting","devtools","StoreDevtoolsModule","instrument","ngModule","providers","StoreDevtoolsModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}