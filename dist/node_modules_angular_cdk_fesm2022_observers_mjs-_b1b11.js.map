{"version":3,"file":"node_modules_angular_cdk_fesm2022_observers_mjs-_b1b11.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/@angular/cdk/fesm2022/observers.mjs"],"sourcesContent":["import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n"],"names":["dateTimestampProvider","Scheduler","constructor","schedulerActionCtor","now","schedule","work","delay","state","asyncScheduler","operate","createOperatorSubscriber","debounceTime","dueTime","scheduler","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","value","next","emitWhenIdle","targetTime","undefined","add","subscribe","complete","Subscription","Action","intervalProvider","arrRemove","AsyncAction","pending","_a","closed","id","recycleAsyncId","requestAsyncId","_id","setInterval","flush","bind","_scheduler","clearInterval","execute","Error","error","_execute","_delay","errored","errorValue","e","actions","AsyncScheduler","SchedulerAction","_active","action","push","shift","async","delegate","Date","handler","timeout","args","handle","coerceElement","coerceBooleanProperty","coerceNumberProperty","i0","Injectable","EventEmitter","Directive","Output","Input","NgModule","Observable","Subject","MutationObserverFactory","create","callback","MutationObserver","_","ɵfac","MutationObserverFactory_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","ContentObserver","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","element","_cleanupObserver","observe","elementOrRef","observer","stream","_observeElement","subscription","_unobserveElement","has","mutations","characterData","childList","subtree","set","count","get","disconnect","delete","ContentObserver_Factory","ɵɵinject","CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","event","_currentSubscription","ngAfterContentInit","runOutsideAngular","pipe","CdkObserveContent_Factory","ɵɵdirectiveInject","ElementRef","NgZone","ɵdir","ɵɵdefineDirective","selectors","inputs","outputs","exportAs","selector","ObserversModule","ObserversModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}