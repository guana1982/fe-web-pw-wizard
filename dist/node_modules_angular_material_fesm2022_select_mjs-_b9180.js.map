{"version":3,"file":"node_modules_angular_material_fesm2022_select_mjs-_b9180.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,CAAC;;AAGvB;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,IAAI,EAAEC,WAAW,EAAE;EAChC,OAAO;IAAEC,IAAI,EAAE,CAAC,CAAC;IAAqCF,IAAI;IAAEC,WAAW;IAAEE,OAAO,EAAE,CAAC;EAAE,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,OAAO,EAAEC,MAAM,GAAG,IAAI,EAAE;EACrC,OAAO;IAAEJ,IAAI,EAAE,CAAC,CAAC;IAAqCI,MAAM;IAAED;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,KAAKA,CAACC,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCM,KAAK;IAAEL;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,QAAQA,CAACD,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACrC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAsCM,KAAK;IAAEL;EAAQ,CAAC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASO,KAAKA,CAACC,MAAM,EAAE;EACnB,OAAO;IAAET,IAAI,EAAE,CAAC,CAAC;IAAmCI,MAAM,EAAEK,MAAM;IAAEC,MAAM,EAAE;EAAK,CAAC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACb,IAAI,EAAEM,MAAM,EAAEH,OAAO,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAmCF,IAAI;IAAEM,MAAM;IAAEH;EAAQ,CAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASW,SAASA,CAACN,KAAK,EAAE;EACtB,OAAO;IAAEN,IAAI,EAAE,CAAC,CAAC;IAAuCM;EAAM,CAAC;AACneAAe,EAAER,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACxD,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAwCe,IAAI,EAAED,eAAe;IAAEE,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,SAASA,CAACV,KAAK,EAAEL,OAAO,GAAG,IAAI,EAAE;EACtC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAAuCgB,SAAS,EAAEV,KAAK;IAAEL;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgB,YAAYA,CAAChB,OAAO,GAAG,IAAI,EAAE;EAClC,OAAO;IAAED,IAAI,EAAE,CAAC,CAAC;IAA0CC;EAAQ,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,YAAYA,CAACF,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAC7C,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAwCgB,SAAS;IAAEf;EAAQ,CAAC;AAClkB,KAAKA,CAACC,QAAQ,EAAEJ,SAAS,EAAEf,OAAO,GAAG,IAAI,EAAE;EAChD,OAAO;IAAED,IAAI,EAAE,EAAE,CAAC;IAAmCoB,QAAQ;IAAEJ,SAAS;IAAEf;EAAQ,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoB,OAAOA,CAAClB,OAAO,EAAEa,SAAS,EAAE;EACjC,OAAO;IAAEhB,IAAI,EAAE,EAAE,CAAC;IAAqCG,OAAO;IAAEa;EAAU,CAAC;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","sources":["./node_modules/@angular/animations/fesm2022/animations.mjs","./node_modules/@angular/material/fesm2022/select.mjs"],"sourcesContent":["/**\n * @license Angular v16.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n}\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {\n}\n\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n    return { type: 7 /* AnimationMetadataType.Trigger */, name, definitions, options: {} };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n    return { type: 4 /* AnimationMetadataType.Animate */, styles, timings };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n    return { type: 3 /* AnimationMetadataType.Group */, steps, options };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n    return { type: 2 /* AnimationMetadataType.Sequence */, steps, options };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n    return { type: 6 /* AnimationMetadataType.Style */, styles: tokens, offset: null };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n    return { type: 0 /* AnimationMetadataType.State */, name, styles, options };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n    return { type: 5 /* AnimationMetadataType.Keyframes */, steps };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n    return { type: 1 /* AnimationMetadataType.Transition */, expr: stateChangeExpr, animation: steps, options };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n    return { type: 8 /* AnimationMetadataType.Reference */, animation: steps, options };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n    return { type: 9 /* AnimationMetadataType.AnimateChild */, options };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n    return { type: 10 /* AnimationMetadataType.AnimateRef */, animation, options };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n    return { type: 11 /* AnimationMetadataType.Query */, selector, animation, options };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n    return { type: 12 /* AnimationMetadataType.Stagger */, timings, animation };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ɵAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n    constructor(duration = 0, delay = 0) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._onDestroyFns = [];\n        this._originalOnDoneFns = [];\n        this._originalOnStartFns = [];\n        this._started = false;\n        this._destroyed = false;\n        this._finished = false;\n        this._position = 0;\n        this.parentPlayer = null;\n        this.totalTime = duration + delay;\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    onStart(fn) {\n        this._originalOnStartFns.push(fn);\n        this._onStartFns.push(fn);\n    }\n    onDone(fn) {\n        this._originalOnDoneFns.push(fn);\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    init() { }\n    play() {\n        if (!this.hasStarted()) {\n            this._onStart();\n            this.triggerMicrotask();\n        }\n        this._started = true;\n    }\n    /** @internal */\n    triggerMicrotask() {\n        queueMicrotask(() => this._onFinish());\n    }\n    _onStart() {\n        this._onStartFns.forEach(fn => fn());\n        this._onStartFns = [];\n    }\n    pause() { }\n    restart() { }\n    finish() {\n        this._onFinish();\n    }\n    destroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            if (!this.hasStarted()) {\n                this._onStart();\n            }\n            this.finish();\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this._started = false;\n        this._finished = false;\n        this._onStartFns = this._originalOnStartFns;\n        this._onDoneFns = this._originalOnDoneFns;\n    }\n    setPosition(position) {\n        this._position = this.totalTime ? position * this.totalTime : 1;\n    }\n    getPosition() {\n        return this.totalTime ? this._position / this.totalTime : 1;\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n    constructor(_players) {\n        this._onDoneFns = [];\n        this._onStartFns = [];\n        this._finished = false;\n        this._started = false;\n        this._destroyed = false;\n        this._onDestroyFns = [];\n        this.parentPlayer = null;\n        this.totalTime = 0;\n        this.players = _players;\n        let doneCount = 0;\n        let destroyCount = 0;\n        let startCount = 0;\n        const total = this.players.length;\n        if (total == 0) {\n            queueMicrotask(() => this._onFinish());\n        }\n        else {\n            this.players.forEach(player => {\n                player.onDone(() => {\n                    if (++doneCount == total) {\n                        this._onFinish();\n                    }\n                });\n                player.onDestroy(() => {\n                    if (++destroyCount == total) {\n                        this._onDestroy();\n                    }\n                });\n                player.onStart(() => {\n                    if (++startCount == total) {\n                        this._onStart();\n                    }\n                });\n            });\n        }\n        this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n    }\n    _onFinish() {\n        if (!this._finished) {\n            this._finished = true;\n            this._onDoneFns.forEach(fn => fn());\n            this._onDoneFns = [];\n        }\n    }\n    init() {\n        this.players.forEach(player => player.init());\n    }\n    onStart(fn) {\n        this._onStartFns.push(fn);\n    }\n    _onStart() {\n        if (!this.hasStarted()) {\n            this._started = true;\n            this._onStartFns.forEach(fn => fn());\n            this._onStartFns = [];\n        }\n    }\n    onDone(fn) {\n        this._onDoneFns.push(fn);\n    }\n    onDestroy(fn) {\n        this._onDestroyFns.push(fn);\n    }\n    hasStarted() {\n        return this._started;\n    }\n    play() {\n        if (!this.parentPlayer) {\n            this.init();\n        }\n        this._onStart();\n        this.players.forEach(player => player.play());\n    }\n    pause() {\n        this.players.forEach(player => player.pause());\n    }\n    restart() {\n        this.players.forEach(player => player.restart());\n    }\n    finish() {\n        this._onFinish();\n        this.players.forEach(player => player.finish());\n    }\n    destroy() {\n        this._onDestroy();\n    }\n    _onDestroy() {\n        if (!this._destroyed) {\n            this._destroyed = true;\n            this._onFinish();\n            this.players.forEach(player => player.destroy());\n            this._onDestroyFns.forEach(fn => fn());\n            this._onDestroyFns = [];\n        }\n    }\n    reset() {\n        this.players.forEach(player => player.reset());\n        this._destroyed = false;\n        this._finished = false;\n        this._started = false;\n    }\n    setPosition(p) {\n        const timeAtPosition = p * this.totalTime;\n        this.players.forEach(player => {\n            const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n            player.setPosition(position);\n        });\n    }\n    getPosition() {\n        const longestPlayer = this.players.reduce((longestSoFar, player) => {\n            const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n            return newPlayerIsLongest ? player : longestSoFar;\n        }, null);\n        return longestPlayer != null ? longestPlayer.getPosition() : 0;\n    }\n    beforeDestroy() {\n        this.players.forEach(player => {\n            if (player.beforeDestroy) {\n                player.beforeDestroy();\n            }\n        });\n    }\n    /** @internal */\n    triggerCallback(phaseName) {\n        const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n        methods.forEach(fn => fn());\n        methods.length = 0;\n    }\n}\n\nconst ɵPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ɵAnimationGroupPlayer, ɵPRE_STYLE };\n","import * as i8 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, CdkOverlayOrigin, OverlayModule } from '@angular/cdk/overlay';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Directive, Optional, Inject, Self, Attribute, Input, ViewChild, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { removeAriaReferencedId, addAriaReferencedId, ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /** This animation transforms the select's overlay panel on and off the page. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)',\n        })),\n        transition('void => showing', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)',\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n// Note that these have been copied over verbatim from\n// `material/select` so that we don't have to expose them publicly.\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\nlet nextUniqueId = 0;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /**\n     * Form control bound to the component.\n     * Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        /**\n         * Emits whenever the component state changes and should cause the parent\n         * form-field to update. Implemented as part of `MatFormFieldControl`.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n    }\n}))));\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `aria-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Track which modal we have modified the `aria-owns` attribute of. When the combobox trigger is\n         * inside an aria-modal, we apply aria-owns to the parent modal with the `id` of the options\n         * panel. Track the modal we have changed so we can undo the changes on destroy.\n         */\n        this._trackedModal = null;\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled'] || changes['userAriaDescribedBy']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n        this._clearFromModal();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._applyModalPanelOwnership();\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * If the autocomplete trigger is inside of an `aria-modal` element, connect\n     * that modal to the options panel with `aria-owns`.\n     *\n     * For some browser + screen reader combinations, when navigation is inside\n     * of an `aria-modal` element, the screen reader treats everything outside\n     * of that modal as hidden or invisible.\n     *\n     * This causes a problem when the combobox trigger is _inside_ of a modal, because the\n     * options panel is rendered _outside_ of that modal, preventing screen reader navigation\n     * from reaching the panel.\n     *\n     * We can work around this issue by applying `aria-owns` to the modal with the `id` of\n     * the options panel. This effectively communicates to assistive technology that the\n     * options panel is part of the same interaction as the modal.\n     *\n     * At time of this writing, this issue is present in VoiceOver.\n     * See https://github.com/angular/components/issues/20694\n     */\n    _applyModalPanelOwnership() {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `LiveAnnouncer` and any other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modal = this._elementRef.nativeElement.closest('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        if (!modal) {\n            // Most commonly, the autocomplete trigger is not inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        if (this._trackedModal) {\n            removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        }\n        addAriaReferencedId(modal, 'aria-owns', panelId);\n        this._trackedModal = modal;\n    }\n    /** Clears the reference to the listbox overlay element from the modal it was added to. */\n    _clearFromModal() {\n        if (!this._trackedModal) {\n            // Most commonly, the autocomplete trigger is not used inside a modal.\n            return;\n        }\n        const panelId = `${this.id}-panel`;\n        removeAriaReferencedId(this._trackedModal, 'aria-owns', panelId);\n        this._trackedModal = null;\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        this._keyManager?.cancelTypeahead();\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this.options.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    _skipPredicate(item) {\n        return item.disabled;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withPageUpDown()\n            .withAllowedModifierKeys(['shiftKey'])\n            .skipPredicate(this._skipPredicate);\n        this._keyManager.tabOut.subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            // `_stateChanges` can fire as a result of a change in the label's DOM value which may\n            // be the result of an expression changing. We have to use `detectChanges` in order\n            // to avoid \"changed after checked\" errors (see #14793).\n            this._changeDetectorRef.detectChanges();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first *enabled* option.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                // Find the index of the first *enabled* option. Avoid calling `_keyManager.setActiveItem`\n                // because it activates the first option that passes the skip predicate, rather than the\n                // first *enabled* option.\n                let firstEnabledOptionIndex = -1;\n                for (let index = 0; index < this.options.length; index++) {\n                    const option = this.options.get(index);\n                    if (!option.disabled) {\n                        firstEnabledOptionIndex = index;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(firstEnabledOptionIndex);\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: _MatSelectBase, inputs: { userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }]; }, propDecorators: { userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Width of the panel. If set to `auto`, the panel will match the trigger width.\n         * If set to null or an empty string, the panel will grow to match the longest option's text.\n         */\n        this.panelWidth = this._defaultOptions && typeof this._defaultOptions.panelWidth !== 'undefined'\n            ? this._defaultOptions.panelWidth\n            : 'auto';\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'end',\n                originY: 'bottom',\n                overlayX: 'end',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n            {\n                originX: 'end',\n                originY: 'top',\n                overlayX: 'end',\n                overlayY: 'bottom',\n                panelClass: 'mat-mdc-select-panel-above',\n            },\n        ];\n        this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n        // `skipPredicate` determines if key manager should avoid putting a given option in the tab\n        // order. Allow disabled list items to receive focus via keyboard to align with WAI ARIA\n        // recommendation.\n        //\n        // Normally WAI ARIA's instructions are to exclude disabled items from the tab order, but it\n        // makes a few exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        //\n        // The user can focus disabled options using the keyboard, but the user cannot click disabled\n        // options.\n        this._skipPredicate = (option) => {\n            if (this.panelOpen) {\n                // Support keyboard focusing disabled options in an ARIA listbox.\n                return false;\n            }\n            // When the panel is closed, skip over disabled options. Support options via the UP/DOWN arrow\n            // keys on a closed select. ARIA listbox interaction pattern is less relevant when the panel is\n            // closed.\n            return option.disabled;\n        };\n    }\n    get shouldLabelFloat() {\n        // Since the panel doesn't overlap the trigger, we\n        // want the label to only float when there's a value.\n        return this.panelOpen || !this.empty || (this.focused && !!this.placeholder);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    open() {\n        // It's important that we read this as late as possible, because doing so earlier will\n        // return a different element since it's based on queries in the form field which may\n        // not have run yet. Also this needs to be assigned before we measure the overlay width.\n        if (this._parentFormField) {\n            this._preferredOverlayOrigin = this._parentFormField.getConnectedOverlayOrigin();\n        }\n        this._overlayWidth = this._getOverlayWidth(this._preferredOverlayOrigin);\n        super.open();\n        // Required for the MDC form field to pick up when the overlay has been opened.\n        this.stateChanges.next();\n    }\n    close() {\n        super.close();\n        // Required for the MDC form field to pick up when the overlay has been closed.\n        this.stateChanges.next();\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const option = this.options.toArray()[index];\n        if (option) {\n            const panel = this.panel.nativeElement;\n            const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n            const element = option._getHostElement();\n            if (index === 0 && labelCount === 1) {\n                // If we've got one group label before the option and we're at the top option,\n                // scroll the list to the top. This is better UX than scrolling the list to the\n                // top of the option, because it allows the user to read the top group's label.\n                panel.scrollTop = 0;\n            }\n            else {\n                panel.scrollTop = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, panel.scrollTop, panel.offsetHeight);\n            }\n        }\n    }\n    _positioningSettled() {\n        this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /** Gets how wide the overlay panel should be. */\n    _getOverlayWidth(preferredOrigin) {\n        if (this.panelWidth === 'auto') {\n            const refToMeasure = preferredOrigin instanceof CdkOverlayOrigin\n                ? preferredOrigin.elementRef\n                : preferredOrigin || this._elementRef;\n            return refToMeasure.nativeElement.getBoundingClientRect().width;\n        }\n        return this.panelWidth === null ? '' : this.panelWidth;\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = coerceBooleanProperty(value);\n        this._syncParentProperties();\n    }\n    /** Syncs the parent state with the individual options. */\n    _syncParentProperties() {\n        if (this.options) {\n            for (const option of this.options) {\n                option._changeDetectorRef.markForCheck();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", panelWidth: \"panelWidth\", hideSingleSelectionIndicator: \"hideSingleSelectionIndicator\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"listbox\", \"ngSkipHydration\": \"\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-mdc-select-disabled\": \"disabled\", \"class.mat-mdc-select-invalid\": \"errorState\", \"class.mat-mdc-select-required\": \"required\", \"class.mat-mdc-select-empty\": \"empty\", \"class.mat-mdc-select-multiple\": \"multiple\" }, classAttribute: \"mat-mdc-select\" }, providers: [\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n        ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-mdc-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-mdc-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-mdc-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"], dependencies: [{ kind: \"directive\", type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i7.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i7.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i7.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { kind: \"directive\", type: i8.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { kind: \"directive\", type: i8.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }], animations: [matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        'aria-haspopup': 'listbox',\n                        'class': 'mat-mdc-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        'ngSkipHydration': '',\n                        '[class.mat-mdc-select-disabled]': 'disabled',\n                        '[class.mat-mdc-select-invalid]': 'errorState',\n                        '[class.mat-mdc-select-required]': 'required',\n                        '[class.mat-mdc-select-empty]': 'empty',\n                        '[class.mat-mdc-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<div cdk-overlay-origin\\n     class=\\\"mat-mdc-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #fallbackOverlayOrigin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-mdc-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-mdc-select-placeholder mat-mdc-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-mdc-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-mdc-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-mdc-select-arrow-wrapper\\\">\\n    <div class=\\\"mat-mdc-select-arrow\\\">\\n      <!-- Use an inline SVG, because it works better than a CSS triangle in high contrast mode. -->\\n      <svg viewBox=\\\"0 0 24 24\\\" width=\\\"24px\\\" height=\\\"24px\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n        <path d=\\\"M7 10l5 5 5-5z\\\"/>\\n      </svg>\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"_preferredOverlayOrigin || fallbackOverlayOrigin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayWidth]=\\\"_overlayWidth\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div\\n    #panel\\n    role=\\\"listbox\\\"\\n    tabindex=\\\"-1\\\"\\n    class=\\\"mat-mdc-select-panel mdc-menu-surface mdc-menu-surface--open {{ _getPanelTheme() }}\\\"\\n    [attr.id]=\\\"id + '-panel'\\\"\\n    [attr.aria-multiselectable]=\\\"multiple\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n    [ngClass]=\\\"panelClass\\\"\\n    [@transformPanel]=\\\"'showing'\\\"\\n    (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-mdc-select{display:inline-block;width:100%;outline:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:var(--mat-select-enabled-trigger-text-color);font-family:var(--mat-select-trigger-text-font);line-height:var(--mat-select-trigger-text-line-height);font-size:var(--mat-select-trigger-text-size);font-weight:var(--mat-select-trigger-text-weight);letter-spacing:var(--mat-select-trigger-text-tracking)}.mat-mdc-select-disabled{color:var(--mat-select-disabled-trigger-text-color)}.mat-mdc-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-mdc-select-disabled .mat-mdc-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-mdc-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-mdc-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-mdc-select-arrow-wrapper{height:24px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-mdc-select-arrow-wrapper{transform:translateY(-8px)}.mat-form-field-appearance-fill .mdc-text-field--no-label .mat-mdc-select-arrow-wrapper{transform:none}.mat-mdc-select-arrow{width:10px;height:5px;position:relative;color:var(--mat-select-enabled-arrow-color)}.mat-mdc-form-field.mat-focused .mat-mdc-select-arrow{color:var(--mat-select-focused-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow{color:var(--mat-select-invalid-arrow-color)}.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow{color:var(--mat-select-disabled-arrow-color)}.mat-mdc-select-arrow svg{fill:currentColor;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:CanvasText}.mat-mdc-select-disabled .cdk-high-contrast-active .mat-mdc-select-arrow svg{fill:GrayText}div.mat-mdc-select-panel{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);width:100%;max-height:275px;outline:0;overflow:auto;padding:8px 0;border-radius:4px;box-sizing:border-box;position:static;background-color:var(--mat-select-panel-background-color)}.cdk-high-contrast-active div.mat-mdc-select-panel{outline:solid 1px}.cdk-overlay-pane:not(.mat-mdc-select-panel-above) div.mat-mdc-select-panel{border-top-left-radius:0;border-top-right-radius:0;transform-origin:top center}.mat-mdc-select-panel-above div.mat-mdc-select-panel{border-bottom-left-radius:0;border-bottom-right-radius:0;transform-origin:bottom center}.mat-mdc-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);color:var(--mat-select-placeholder-text-color)}._mat-animation-noopable .mat-mdc-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-mdc-select-placeholder{color:rgba(0,0,0,0);-webkit-text-fill-color:rgba(0,0,0,0);transition:none;display:block}.mat-mdc-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper{cursor:pointer}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mat-mdc-floating-label{max-width:calc(100% - 18px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-fill .mdc-floating-label--float-above{max-width:calc(100% / 0.75 - 24px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-notched-outline__notch{max-width:calc(100% - 60px)}.mat-mdc-form-field-type-mat-select.mat-form-field-appearance-outline .mdc-text-field--label-floating .mdc-notched-outline__notch{max-width:calc(100% - 24px)}.mat-mdc-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }], panelWidth: [{\n                type: Input\n            }], hideSingleSelectionIndicator: [{\n                type: Input\n            }] } });\n\nclass MatSelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n            MatFormFieldModule,\n            MatSelect,\n            MatSelectTrigger,\n            MatOptionModule,\n            MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule, CdkScrollableModule,\n            MatFormFieldModule,\n            MatOptionModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n"],"names":["AnimationBuilder","AnimationFactory","AUTO_STYLE","trigger","name","definitions","type","options","animate","timings","styles","group","steps","sequence","style","tokens","offset","state","keyframes","transition","stateChangeExpr","expr","animation","animateChild","useAnimation","query","selector","stagger","NoopAnimationPlayer","constructor","duration","delay","_onDoneFns","_onStartFns","_onDestroyFns","_originalOnDoneFns","_originalOnStartFns","_started","_destroyed","_finished","_position","parentPlayer","totalTime","_onFinish","forEach","fn","onStart","push","onDone","onDestroy","hasStarted","init","play","_onStart","triggerMicrotask","queueMicrotask","pause","restart","finish","destroy","reset","setPosition","position","getPosition","triggerCallback","phaseName","methods","length","AnimationGroupPlayer","_players","players","doneCount","destroyCount","startCount","total","player","_onDestroy","reduce","time","Math","max","p","timeAtPosition","min","longestPlayer","longestSoFar","newPlayerIsLongest","beforeDestroy","ɵPRE_STYLE","ɵAnimationGroupPlayer","i8","Overlay","CdkConnectedOverlay","CdkOverlayOrigin","OverlayModule","i7","CommonModule","i0","InjectionToken","EventEmitter","Directive","Optional","Inject","Self","Attribute","Input","ViewChild","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","ContentChild","NgModule","i2","mixinDisableRipple","mixinTabIndex","mixinDisabled","mixinErrorState","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MatOption","MAT_OPTGROUP","MatOptionModule","MatCommonModule","i6","MAT_FORM_FIELD","MatFormFieldControl","MatFormFieldModule","i1","CdkScrollableModule","i5","removeAriaReferencedId","addAriaReferencedId","ActiveDescendantKeyManager","i3","coerceBooleanProperty","coerceNumberProperty","SelectionModel","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","hasModifierKey","A","i4","Validators","Subject","defer","merge","startWith","switchMap","take","filter","map","distinctUntilChanged","takeUntil","_c0","_c1","MatSelect_span_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵadvance","ɵɵtextInterpolate","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","ɵɵprojection","MatSelect_span_5_Template","ɵɵtemplate","ctx_r3","ɵɵproperty","customTrigger","MatSelect_ng_template_10_Template","_r9","ɵɵgetCurrentView","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵlistener","MatSelect_ng_template_10_Template_div_animation_transformPanel_done_0_listener","$event","ɵɵrestoreView","ctx_r8","ɵɵresetView","_panelDoneAnimatingStream","next","toState","MatSelect_ng_template_10_Template_div_keydown_0_listener","ctx_r10","_handleKeydown","ctx_r4","ɵɵclassMapInterpolate1","_getPanelTheme","panelClass","ɵɵattribute","id","multiple","ariaLabel","_getPanelAriaLabelledby","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","opacity","transform","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MAT_SELECT_TRIGGER","MatSelectChange","source","value","_MatSelectMixinBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","stateChanges","_MatSelectBase","focused","_focused","_panelOpen","_placeholder","required","_required","control","hasValidator","_multiple","_selectionModel","ngDevMode","disableOptionCentering","_disableOptionCentering","compareWith","_compareWith","_initializeSelection","_value","newValue","hasAssigned","_assignValue","_onChange","typeaheadDebounceInterval","_typeaheadDebounceInterval","_id","_uid","_viewportRuler","_changeDetectorRef","_ngZone","elementRef","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","o1","o2","_triggerAriaLabelledBy","_destroy","_onTouched","_valueId","_overlayPanelClass","overlayPanelClass","controlType","optionSelectionChanges","changes","pipe","option","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","_trackedModal","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","ngOnInit","subscribe","_panelDoneAnimating","panelOpen","ngAfterContentInit","_initKeyManager","changed","event","added","select","removed","deselect","_resetOptions","ngDoCheck","newAriaLabelledby","_getTriggerAriaLabelledby","element","nativeElement","setAttribute","removeAttribute","_previousControl","undefined","disabled","updateErrorState","ngOnChanges","_keyManager","withTypeAhead","ngOnDestroy","complete","_clearFromModal","toggle","close","open","_canOpen","_applyModalPanelOwnership","withHorizontalOrientation","_highlightCorrectOption","markForCheck","modal","closest","panelId","_isRtl","writeValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","empty","selectedOptions","viewValue","reverse","join","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","some","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_onFocus","_onBlur","cancelTypeahead","_onAttached","_overlayDir","positionChange","detectChanges","_positioningSettled","color","isEmpty","Promise","resolve","then","_setSelectionByValue","setInactiveStyles","clear","Array","isArray","currentValue","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","find","isSelected","error","console","warn","_skipPredicate","item","withVerticalOrientation","withHomeAndEnd","withPageUpDown","withAllowedModifierKeys","skipPredicate","tabOut","focus","change","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","setActiveItem","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","emit","_getChangeEvent","firstEnabledOptionIndex","index","get","labelId","getLabelId","labelExpression","ariaLabelledby","_getAriaActiveDescendant","isOpen","setDescribedByIds","ids","onContainerClick","shouldLabelFloat","_","ɵfac","_MatSelectBase_Factory","t","ɵɵdirectiveInject","ViewportRuler","ChangeDetectorRef","NgZone","ErrorStateMatcher","ElementRef","Directionality","NgForm","FormGroupDirective","NgControl","ɵɵinjectAttribute","LiveAnnouncer","_2","ɵdir","ɵɵdefineDirective","viewQuery","_MatSelectBase_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","userAriaDescribedBy","errorStateMatcher","outputs","features","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵsetClassMetadata","decorators","MatFormField","args","MatSelectTrigger","MatSelectTrigger_Factory","selectors","ɵɵProvidersFeature","useExisting","providers","MatSelect","arguments","panelWidth","_positions","originX","originY","overlayX","overlayY","_hideSingleSelectionIndicator","hideSingleSelectionIndicator","_overlayWidth","_getOverlayWidth","_preferredOverlayOrigin","getConnectedOverlayOrigin","labelCount","optionGroups","_getHostElement","scrollTop","offsetTop","offsetHeight","preferredOrigin","refToMeasure","getBoundingClientRect","width","_syncParentProperties","ɵMatSelect_BaseFactory","MatSelect_Factory","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","contentQueries","MatSelect_ContentQueries","dirIndex","ɵɵcontentQuery","hostAttrs","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","toString","errorState","ɵɵclassProp","disableRipple","exportAs","ngContentSelectors","decls","vars","consts","template","MatSelect_Template","ɵɵprojectionDef","MatSelect_Template_div_click_0_listener","ɵɵelement","MatSelect_Template_ng_template_backdropClick_10_listener","MatSelect_Template_ng_template_attach_10_listener","MatSelect_Template_ng_template_detach_10_listener","_r0","ɵɵreference","dependencies","NgClass","NgSwitch","NgSwitchCase","NgSwitchDefault","encapsulation","data","changeDetection","None","OnPush","host","animations","descendants","MatSelectModule","MatSelectModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}