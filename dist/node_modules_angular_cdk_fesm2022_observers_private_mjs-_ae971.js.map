{"version":3,"file":"node_modules_angular_cdk_fesm2022_observers_private_mjs-_ae971.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/share.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/@angular/cdk/fesm2022/observers/private.mjs"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options = {}) {\n    const { connector = () => new Subject(), resetOnError = true, resetOnComplete = true, resetOnRefCountZero = true } = options;\n    return (wrapperSource) => {\n        let connection;\n        let resetConnection;\n        let subject;\n        let refCount = 0;\n        let hasCompleted = false;\n        let hasErrored = false;\n        const cancelReset = () => {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        const reset = () => {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        const resetAndUnsubscribe = () => {\n            const conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate((source, subscriber) => {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            const dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(() => {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: (value) => dest.next(value),\n                    error: (err) => {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: () => {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on, ...args) {\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    const onSubscriber = new SafeSubscriber({\n        next: () => {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on(...args)).subscribe(onSubscriber);\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = (e) => {\n    if (e instanceof Error && e.message === 'ResizeObserver loop limit exceeded') {\n        console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n    }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n    constructor(\n    /** The box type to observe for resizes. */\n    _box) {\n        this._box = _box;\n        /** Stream that emits when the shared observer is destroyed. */\n        this._destroyed = new Subject();\n        /** Stream of all events from the ResizeObserver. */\n        this._resizeSubject = new Subject();\n        /** A map of elements to streams of their resize events. */\n        this._elementObservables = new Map();\n        if (typeof ResizeObserver !== 'undefined') {\n            this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n        }\n    }\n    /**\n     * Gets a stream of resize events for the given element.\n     * @param target The element to observe.\n     * @return The stream of resize events for the element.\n     */\n    observe(target) {\n        if (!this._elementObservables.has(target)) {\n            this._elementObservables.set(target, new Observable(observer => {\n                const subscription = this._resizeSubject.subscribe(observer);\n                this._resizeObserver?.observe(target, { box: this._box });\n                return () => {\n                    this._resizeObserver?.unobserve(target);\n                    subscription.unsubscribe();\n                    this._elementObservables.delete(target);\n                };\n            }).pipe(filter(entries => entries.some(entry => entry.target === target)), \n            // Share a replay of the last event so that subsequent calls to observe the same element\n            // receive initial sizing info like the first one. Also enable ref counting so the\n            // element will be automatically unobserved when there are no more subscriptions.\n            shareReplay({ bufferSize: 1, refCount: true }), takeUntil(this._destroyed)));\n        }\n        return this._elementObservables.get(target);\n    }\n    /** Destroys this instance. */\n    destroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._resizeSubject.complete();\n        this._elementObservables.clear();\n    }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nclass SharedResizeObserver {\n    constructor() {\n        /** Map of box type to shared resize observer. */\n        this._observers = new Map();\n        /** The Angular zone. */\n        this._ngZone = inject(NgZone);\n        if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            this._ngZone.runOutsideAngular(() => {\n                window.addEventListener('error', loopLimitExceededErrorHandler);\n            });\n        }\n    }\n    ngOnDestroy() {\n        for (const [, observer] of this._observers) {\n            observer.destroy();\n        }\n        this._observers.clear();\n        if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            window.removeEventListener('error', loopLimitExceededErrorHandler);\n        }\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n        const box = options?.box || 'content-box';\n        if (!this._observers.has(box)) {\n            this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n        }\n        return this._observers.get(box).observe(target);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: SharedResizeObserver, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: SharedResizeObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: SharedResizeObserver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n"],"names":["Subject","dateTimestampProvider","ReplaySubject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","operate","createOperatorSubscriber","filter","predicate","thisArg","source","index","subscribe","call","innerFrom","SafeSubscriber","share","options","connector","resetOnError","resetOnComplete","resetOnRefCountZero","wrapperSource","connection","resetConnection","subject","refCount","hasCompleted","hasErrored","cancelReset","unsubscribe","undefined","reset","resetAndUnsubscribe","conn","dest","add","handleReset","error","err","complete","on","args","onSubscriber","shareReplay","configOrBufferSize","windowTime","scheduler","bufferSize","delegate","Date","i0","inject","NgZone","Injectable","Observable","takeUntil","loopLimitExceededErrorHandler","e","Error","message","console","SingleBoxSharedResizeObserver","_box","_destroyed","_resizeSubject","_elementObservables","Map","ResizeObserver","_resizeObserver","entries","observe","target","has","set","observer","box","unobserve","delete","pipe","some","entry","get","destroy","clear","SharedResizeObserver","_observers","_ngZone","ngDevMode","runOutsideAngular","window","addEventListener","ngOnDestroy","removeEventListener","_","ɵfac","SharedResizeObserver_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","type"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5]}