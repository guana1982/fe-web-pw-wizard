{"version":3,"file":"node_modules_ngrx_router-store_fesm2022_ngrx-router-store_mjs-_777d0.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","./node_modules/@ngrx/router-store/fesm2022/ngrx-router-store.mjs"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import * as i1 from '@ngrx/store';\nimport { createAction, props, isNgrxMockEnvironment, select, ACTIVE_RUNTIME_CHECKS, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Injectable, Inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER, inject, NgModule } from '@angular/core';\nimport * as i2 from '@angular/router';\nimport { NavigationStart, RoutesRecognized, NavigationCancel, NavigationError, NavigationEnd } from '@angular/router';\nimport { withLatestFrom } from 'rxjs/operators';\n\n/**\n * An action dispatched when a router navigation request is fired.\n */\nconst ROUTER_REQUEST = '@ngrx/router-store/request';\nconst routerRequestAction = createAction(ROUTER_REQUEST, props());\n/**\n * An action dispatched when the router navigates.\n */\nconst ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\nconst routerNavigationAction = createAction(ROUTER_NAVIGATION, props());\n/**\n * An action dispatched when the router cancels navigation.\n */\nconst ROUTER_CANCEL = '@ngrx/router-store/cancel';\nconst routerCancelAction = createAction(ROUTER_CANCEL, props());\n/**\n * An action dispatched when the router errors.\n */\nconst ROUTER_ERROR = '@ngrx/router-store/error';\nconst routerErrorAction = createAction(ROUTER_ERROR, props());\n/**\n * An action dispatched after navigation has ended and new route is active.\n */\nconst ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\nconst routerNavigatedAction = createAction(ROUTER_NAVIGATED, props());\n\nfunction routerReducer(state, action) {\n    // Allow compilation with strictFunctionTypes - ref: #1344\n    const routerAction = action;\n    switch (routerAction.type) {\n        case ROUTER_NAVIGATION:\n        case ROUTER_ERROR:\n        case ROUTER_CANCEL:\n            return {\n                state: routerAction.payload.routerState,\n                navigationId: routerAction.payload.event.id,\n            };\n        default:\n            return state;\n    }\n}\n\nclass MinimalRouterStateSerializer {\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    serializeRoute(route) {\n        const children = route.children.map((c) => this.serializeRoute(c));\n        return {\n            params: route.params,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            title: route.title,\n            routeConfig: route.routeConfig\n                ? {\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                    title: typeof route.routeConfig.title === 'string'\n                        ? route.routeConfig.title\n                        : undefined,\n                }\n                : null,\n            queryParams: route.queryParams,\n            fragment: route.fragment,\n            firstChild: children[0],\n            children,\n        };\n    }\n}\n\nvar NavigationActionTiming;\n(function (NavigationActionTiming) {\n    NavigationActionTiming[NavigationActionTiming[\"PreActivation\"] = 1] = \"PreActivation\";\n    NavigationActionTiming[NavigationActionTiming[\"PostActivation\"] = 2] = \"PostActivation\";\n})(NavigationActionTiming || (NavigationActionTiming = {}));\nconst DEFAULT_ROUTER_FEATURENAME = 'router';\nconst _ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Internal Configuration');\nconst ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Configuration');\nfunction _createRouterConfig(config) {\n    return {\n        stateKey: DEFAULT_ROUTER_FEATURENAME,\n        serializer: MinimalRouterStateSerializer,\n        navigationActionTiming: NavigationActionTiming.PreActivation,\n        ...config,\n    };\n}\n\nclass FullRouterStateSerializer {\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    serializeRoute(route) {\n        const children = route.children.map((c) => this.serializeRoute(c));\n        return {\n            params: route.params,\n            paramMap: route.paramMap,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            title: route.title,\n            routeConfig: route.routeConfig\n                ? {\n                    component: route.routeConfig.component,\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                    title: route.routeConfig.title,\n                }\n                : null,\n            queryParams: route.queryParams,\n            queryParamMap: route.queryParamMap,\n            fragment: route.fragment,\n            component: (route.routeConfig\n                ? route.routeConfig.component\n                : undefined),\n            root: undefined,\n            parent: undefined,\n            firstChild: children[0],\n            pathFromRoot: undefined,\n            children,\n        };\n    }\n}\n\nclass RouterStateSerializer {\n}\n\nvar RouterTrigger;\n(function (RouterTrigger) {\n    RouterTrigger[RouterTrigger[\"NONE\"] = 1] = \"NONE\";\n    RouterTrigger[RouterTrigger[\"ROUTER\"] = 2] = \"ROUTER\";\n    RouterTrigger[RouterTrigger[\"STORE\"] = 3] = \"STORE\";\n})(RouterTrigger || (RouterTrigger = {}));\n/**\n * Shared router initialization logic used alongside both the StoreRouterConnectingModule and the provideRouterStore\n * function\n */\nclass StoreRouterConnectingService {\n    constructor(store, router, serializer, errorHandler, config, activeRuntimeChecks) {\n        this.store = store;\n        this.router = router;\n        this.serializer = serializer;\n        this.errorHandler = errorHandler;\n        this.config = config;\n        this.activeRuntimeChecks = activeRuntimeChecks;\n        this.lastEvent = null;\n        this.routerState = null;\n        this.trigger = RouterTrigger.NONE;\n        this.stateKey = this.config.stateKey;\n        if (!isNgrxMockEnvironment() &&\n            isDevMode() &&\n            (activeRuntimeChecks?.strictActionSerializability ||\n                activeRuntimeChecks?.strictStateSerializability) &&\n            this.serializer instanceof FullRouterStateSerializer) {\n            console.warn('@ngrx/router-store: The serializability runtime checks cannot be enabled ' +\n                'with the FullRouterStateSerializer. The FullRouterStateSerializer ' +\n                'has an unserializable router state and actions that are not serializable. ' +\n                'To use the serializability runtime checks either use ' +\n                'the MinimalRouterStateSerializer or implement a custom router state serializer.');\n        }\n        this.setUpStoreStateListener();\n        this.setUpRouterEventsListener();\n    }\n    setUpStoreStateListener() {\n        this.store\n            .pipe(select(this.stateKey), withLatestFrom(this.store))\n            .subscribe(([routerStoreState, storeState]) => {\n            this.navigateIfNeeded(routerStoreState, storeState);\n        });\n    }\n    navigateIfNeeded(routerStoreState, storeState) {\n        if (!routerStoreState || !routerStoreState.state) {\n            return;\n        }\n        if (this.trigger === RouterTrigger.ROUTER) {\n            return;\n        }\n        if (this.lastEvent instanceof NavigationStart) {\n            return;\n        }\n        const url = routerStoreState.state.url;\n        if (!isSameUrl(this.router.url, url)) {\n            this.storeState = storeState;\n            this.trigger = RouterTrigger.STORE;\n            this.router.navigateByUrl(url).catch((error) => {\n                this.errorHandler.handleError(error);\n            });\n        }\n    }\n    setUpRouterEventsListener() {\n        const dispatchNavLate = this.config.navigationActionTiming ===\n            NavigationActionTiming.PostActivation;\n        let routesRecognized;\n        this.router.events\n            .pipe(withLatestFrom(this.store))\n            .subscribe(([event, storeState]) => {\n            this.lastEvent = event;\n            if (event instanceof NavigationStart) {\n                this.routerState = this.serializer.serialize(this.router.routerState.snapshot);\n                if (this.trigger !== RouterTrigger.STORE) {\n                    this.storeState = storeState;\n                    this.dispatchRouterRequest(event);\n                }\n            }\n            else if (event instanceof RoutesRecognized) {\n                routesRecognized = event;\n                if (!dispatchNavLate && this.trigger !== RouterTrigger.STORE) {\n                    this.dispatchRouterNavigation(event);\n                }\n            }\n            else if (event instanceof NavigationCancel) {\n                this.dispatchRouterCancel(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationError) {\n                this.dispatchRouterError(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationEnd) {\n                if (this.trigger !== RouterTrigger.STORE) {\n                    if (dispatchNavLate) {\n                        this.dispatchRouterNavigation(routesRecognized);\n                    }\n                    this.dispatchRouterNavigated(event);\n                }\n                this.reset();\n            }\n        });\n    }\n    dispatchRouterRequest(event) {\n        this.dispatchRouterAction(ROUTER_REQUEST, { event });\n    }\n    dispatchRouterNavigation(lastRoutesRecognized) {\n        const nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n        this.dispatchRouterAction(ROUTER_NAVIGATION, {\n            routerState: nextRouterState,\n            event: new RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n        });\n    }\n    dispatchRouterCancel(event) {\n        this.dispatchRouterAction(ROUTER_CANCEL, {\n            storeState: this.storeState,\n            event,\n        });\n    }\n    dispatchRouterError(event) {\n        this.dispatchRouterAction(ROUTER_ERROR, {\n            storeState: this.storeState,\n            event: new NavigationError(event.id, event.url, `${event}`),\n        });\n    }\n    dispatchRouterNavigated(event) {\n        const routerState = this.serializer.serialize(this.router.routerState.snapshot);\n        this.dispatchRouterAction(ROUTER_NAVIGATED, { event, routerState });\n    }\n    dispatchRouterAction(type, payload) {\n        this.trigger = RouterTrigger.ROUTER;\n        try {\n            this.store.dispatch({\n                type,\n                payload: {\n                    routerState: this.routerState,\n                    ...payload,\n                    event: this.config.routerState === 0 /* RouterState.Full */\n                        ? payload.event\n                        : {\n                            id: payload.event.id,\n                            url: payload.event.url,\n                            // safe, as it will just be `undefined` for non-NavigationEnd router events\n                            urlAfterRedirects: payload.event\n                                .urlAfterRedirects,\n                        },\n                },\n            });\n        }\n        finally {\n            this.trigger = RouterTrigger.NONE;\n        }\n    }\n    reset() {\n        this.trigger = RouterTrigger.NONE;\n        this.storeState = null;\n        this.routerState = null;\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingService, deps: [{ token: i1.Store }, { token: i2.Router }, { token: RouterStateSerializer }, { token: i0.ErrorHandler }, { token: ROUTER_CONFIG }, { token: ACTIVE_RUNTIME_CHECKS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.Router }, { type: RouterStateSerializer }, { type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ROUTER_CONFIG]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [ACTIVE_RUNTIME_CHECKS]\n                }] }]; } });\n/**\n * Check if the URLs are matching. Accounts for the possibility of trailing \"/\" in url.\n */\nfunction isSameUrl(first, second) {\n    return stripTrailingSlash(first) === stripTrailingSlash(second);\n}\nfunction stripTrailingSlash(text) {\n    if (text?.length > 0 && text[text.length - 1] === '/') {\n        return text.substring(0, text.length - 1);\n    }\n    return text;\n}\n\n/**\n * Connects the Angular Router to the Store.\n *\n * @usageNotes\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [\n *     provideStore({ router: routerReducer }),\n *     provideRouterStore(),\n *   ],\n * });\n * ```\n */\nfunction provideRouterStore(config = {}) {\n    return makeEnvironmentProviders([\n        { provide: _ROUTER_CONFIG, useValue: config },\n        {\n            provide: ROUTER_CONFIG,\n            useFactory: _createRouterConfig,\n            deps: [_ROUTER_CONFIG],\n        },\n        {\n            provide: RouterStateSerializer,\n            useClass: config.serializer\n                ? config.serializer\n                : config.routerState === 0 /* RouterState.Full */\n                    ? FullRouterStateSerializer\n                    : MinimalRouterStateSerializer,\n        },\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            multi: true,\n            useFactory() {\n                return () => inject(StoreRouterConnectingService);\n            },\n        },\n        StoreRouterConnectingService,\n    ]);\n}\n\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * @NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule.forRoot()\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nclass StoreRouterConnectingModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: StoreRouterConnectingModule,\n            providers: [provideRouterStore(config)],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: StoreRouterConnectingModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\nfunction createRouterSelector() {\n    return createFeatureSelector(DEFAULT_ROUTER_FEATURENAME);\n}\nfunction getRouterSelectors(selectState = createRouterSelector()) {\n    const selectRouterState = createSelector(selectState, (router) => router && router.state);\n    const selectRootRoute = createSelector(selectRouterState, (routerState) => routerState && routerState.root);\n    const selectCurrentRoute = createSelector(selectRootRoute, (rootRoute) => {\n        if (!rootRoute) {\n            return undefined;\n        }\n        let route = rootRoute;\n        while (route.firstChild) {\n            route = route.firstChild;\n        }\n        return route;\n    });\n    const selectFragment = createSelector(selectRootRoute, (route) => route && route.fragment);\n    const selectQueryParams = createSelector(selectRootRoute, (route) => route && route.queryParams);\n    const selectQueryParam = (param) => createSelector(selectQueryParams, (params) => params && params[param]);\n    const selectRouteParams = createSelector(selectCurrentRoute, (route) => route && route.params);\n    const selectRouteParam = (param) => createSelector(selectRouteParams, (params) => params && params[param]);\n    const selectRouteData = createSelector(selectCurrentRoute, (route) => route && route.data);\n    const selectRouteDataParam = (param) => createSelector(selectRouteData, (data) => data && data[param]);\n    const selectUrl = createSelector(selectRouterState, (routerState) => routerState && routerState.url);\n    const selectTitle = createSelector(selectCurrentRoute, (route) => {\n        if (!route?.routeConfig) {\n            return undefined;\n        }\n        return typeof route.routeConfig.title === 'string'\n            ? route.routeConfig.title // static title\n            : route.title; // resolved title\n    });\n    return {\n        selectCurrentRoute,\n        selectFragment,\n        selectQueryParams,\n        selectQueryParam,\n        selectRouteParams,\n        selectRouteParam,\n        selectRouteData,\n        selectRouteDataParam,\n        selectUrl,\n        selectTitle,\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_ROUTER_FEATURENAME, FullRouterStateSerializer, MinimalRouterStateSerializer, NavigationActionTiming, ROUTER_CANCEL, ROUTER_CONFIG, ROUTER_ERROR, ROUTER_NAVIGATED, ROUTER_NAVIGATION, ROUTER_REQUEST, RouterStateSerializer, StoreRouterConnectingModule, createRouterSelector, getRouterSelectors, provideRouterStore, routerCancelAction, routerErrorAction, routerNavigatedAction, routerNavigationAction, routerReducer, routerRequestAction };\n"],"names":["operate","createOperatorSubscriber","innerFrom","identity","noop","popResultSelector","withLatestFrom","inputs","project","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","subscribe","value","every","values","next","i1","createAction","props","isNgrxMockEnvironment","select","ACTIVE_RUNTIME_CHECKS","createFeatureSelector","createSelector","i0","InjectionToken","isDevMode","Injectable","Inject","makeEnvironmentProviders","ENVIRONMENT_INITIALIZER","inject","NgModule","i2","NavigationStart","RoutesRecognized","NavigationCancel","NavigationError","NavigationEnd","ROUTER_REQUEST","routerRequestAction","ROUTER_NAVIGATION","routerNavigationAction","ROUTER_CANCEL","routerCancelAction","ROUTER_ERROR","routerErrorAction","ROUTER_NAVIGATED","routerNavigatedAction","routerReducer","state","action","routerAction","type","payload","routerState","navigationId","event","id","MinimalRouterStateSerializer","serialize","root","serializeRoute","url","route","children","c","params","data","outlet","title","routeConfig","path","pathMatch","redirectTo","undefined","queryParams","fragment","firstChild","NavigationActionTiming","DEFAULT_ROUTER_FEATURENAME","_ROUTER_CONFIG","ROUTER_CONFIG","_createRouterConfig","config","stateKey","serializer","navigationActionTiming","PreActivation","FullRouterStateSerializer","paramMap","component","queryParamMap","parent","pathFromRoot","RouterStateSerializer","RouterTrigger","StoreRouterConnectingService","constructor","store","router","errorHandler","activeRuntimeChecks","lastEvent","trigger","NONE","strictActionSerializability","strictStateSerializability","console","warn","setUpStoreStateListener","setUpRouterEventsListener","pipe","routerStoreState","storeState","navigateIfNeeded","ROUTER","isSameUrl","STORE","navigateByUrl","catch","error","handleError","dispatchNavLate","PostActivation","routesRecognized","events","snapshot","dispatchRouterRequest","dispatchRouterNavigation","dispatchRouterCancel","reset","dispatchRouterError","dispatchRouterNavigated","dispatchRouterAction","lastRoutesRecognized","nextRouterState","urlAfterRedirects","dispatch","_","ɵfac","StoreRouterConnectingService_Factory","t","ɵɵinject","Store","Router","ErrorHandler","_2","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","decorators","args","first","second","stripTrailingSlash","text","substring","provideRouterStore","provide","useValue","useFactory","deps","useClass","multi","StoreRouterConnectingModule","forRoot","ngModule","providers","StoreRouterConnectingModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","createRouterSelector","getRouterSelectors","selectState","selectRouterState","selectRootRoute","selectCurrentRoute","rootRoute","selectFragment","selectQueryParams","selectQueryParam","param","selectRouteParams","selectRouteParam","selectRouteData","selectRouteDataParam","selectUrl","selectTitle"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}