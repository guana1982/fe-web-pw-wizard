{"version":3,"file":"node_modules_ngrx_effects_fesm2022_ngrx-effects_mjs-_56480.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/Notification.js","./node_modules/rxjs/dist/esm/internal/operators/dematerialize.js","./node_modules/rxjs/dist/esm/internal/operators/exhaustMap.js","./node_modules/rxjs/dist/esm/internal/operators/finalize.js","./node_modules/rxjs/dist/esm/internal/operators/groupBy.js","./node_modules/rxjs/dist/esm/internal/operators/materialize.js","./node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","./node_modules/@ngrx/effects/fesm2022/ngrx-effects.mjs"],"sourcesContent":["import { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\nexport var NotificationKind;\n(function (NotificationKind) {\n    NotificationKind[\"NEXT\"] = \"N\";\n    NotificationKind[\"ERROR\"] = \"E\";\n    NotificationKind[\"COMPLETE\"] = \"C\";\n})(NotificationKind || (NotificationKind = {}));\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    observe(observer) {\n        return observeNotification(this, observer);\n    }\n    do(nextHandler, errorHandler, completeHandler) {\n        const { kind, value, error } = this;\n        return kind === 'N' ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === 'E' ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();\n    }\n    accept(nextOrObserver, error, complete) {\n        var _a;\n        return isFunction((_a = nextOrObserver) === null || _a === void 0 ? void 0 : _a.next)\n            ? this.observe(nextOrObserver)\n            : this.do(nextOrObserver, error, complete);\n    }\n    toObservable() {\n        const { kind, value, error } = this;\n        const result = kind === 'N'\n            ?\n                of(value)\n            :\n                kind === 'E'\n                    ?\n                        throwError(() => error)\n                    :\n                        kind === 'C'\n                            ?\n                                EMPTY\n                            :\n                                0;\n        if (!result) {\n            throw new TypeError(`Unexpected notification kind ${kind}`);\n        }\n        return result;\n    }\n    static createNext(value) {\n        return new Notification('N', value);\n    }\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nexport function observeNotification(notification, observer) {\n    var _a, _b, _c;\n    const { kind, value, error } = notification;\n    if (typeof kind !== 'string') {\n        throw new TypeError('Invalid notification, missing \"kind\"');\n    }\n    kind === 'N' ? (_a = observer.next) === null || _a === void 0 ? void 0 : _a.call(observer, value) : kind === 'E' ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);\n}\n","import { observeNotification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function dematerialize() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n    });\n}\n","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return operate((source, subscriber) => {\n        let index = 0;\n        let innerSub = null;\n        let isComplete = false;\n        source.subscribe(createOperatorSubscriber(subscriber, (outerValue) => {\n            if (!innerSub) {\n                innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n                    innerSub = null;\n                    isComplete && subscriber.complete();\n                });\n                innerFrom(project(outerValue, index++)).subscribe(innerSub);\n            }\n        }, () => {\n            isComplete = true;\n            !innerSub && subscriber.complete();\n        }));\n    });\n}\n","import { operate } from '../util/lift';\nexport function finalize(callback) {\n    return operate((source, subscriber) => {\n        try {\n            source.subscribe(subscriber);\n        }\n        finally {\n            subscriber.add(callback);\n        }\n    });\n}\n","import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementOrOptions, duration, connector) {\n    return operate((source, subscriber) => {\n        let element;\n        if (!elementOrOptions || typeof elementOrOptions === 'function') {\n            element = elementOrOptions;\n        }\n        else {\n            ({ duration, element, connector } = elementOrOptions);\n        }\n        const groups = new Map();\n        const notify = (cb) => {\n            groups.forEach(cb);\n            cb(subscriber);\n        };\n        const handleError = (err) => notify((consumer) => consumer.error(err));\n        let activeGroups = 0;\n        let teardownAttempted = false;\n        const groupBySourceSubscriber = new OperatorSubscriber(subscriber, (value) => {\n            try {\n                const key = keySelector(value);\n                let group = groups.get(key);\n                if (!group) {\n                    groups.set(key, (group = connector ? connector() : new Subject()));\n                    const grouped = createGroupedObservable(key, group);\n                    subscriber.next(grouped);\n                    if (duration) {\n                        const durationSubscriber = createOperatorSubscriber(group, () => {\n                            group.complete();\n                            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n                        }, undefined, undefined, () => groups.delete(key));\n                        groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n                    }\n                }\n                group.next(element ? element(value) : value);\n            }\n            catch (err) {\n                handleError(err);\n            }\n        }, () => notify((consumer) => consumer.complete()), handleError, () => groups.clear(), () => {\n            teardownAttempted = true;\n            return activeGroups === 0;\n        });\n        source.subscribe(groupBySourceSubscriber);\n        function createGroupedObservable(key, groupSubject) {\n            const result = new Observable((groupSubscriber) => {\n                activeGroups++;\n                const innerSub = groupSubject.subscribe(groupSubscriber);\n                return () => {\n                    innerSub.unsubscribe();\n                    --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n                };\n            });\n            result.key = key;\n            return result;\n        }\n    });\n}\n","import { Notification } from '../Notification';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function materialize() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(Notification.createNext(value));\n        }, () => {\n            subscriber.next(Notification.createComplete());\n            subscriber.complete();\n        }, (err) => {\n            subscriber.next(Notification.createError(err));\n            subscriber.complete();\n        }));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import * as i1 from 'rxjs';\nimport { merge, Observable, Subject, defer, of } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize, withLatestFrom } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, NgModule, Optional, inject, makeEnvironmentProviders, ENVIRONMENT_INITIALIZER } from '@angular/core';\nimport * as i3 from '@ngrx/store';\nimport { ScannedActionsSubject, createAction, ROOT_STORE_PROVIDER, FEATURE_STATE_PROVIDER, Store } from '@ngrx/store';\n\nconst DEFAULT_EFFECT_CONFIG = {\n    dispatch: true,\n    functional: false,\n    useEffectsErrorHandler: true,\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n *\n * Creates an effect from a source and an `EffectConfig`.\n *\n * @param source A function which returns an observable or observable factory.\n * @param config A `EffectConfig` to configure the effect. By default,\n * `dispatch` is true, `functional` is false, and `useEffectsErrorHandler` is\n * true.\n * @returns If `EffectConfig`#`functional` is true, returns the source function.\n * Else, returns the source function result. When `EffectConfig`#`dispatch` is\n * true, the source function result needs to be `Observable<Action>`.\n *\n * @usageNotes\n *\n * ### Class Effects\n *\n * ```ts\n * @Injectable()\n * export class FeatureEffects {\n *   // mapping to a different action\n *   readonly effect1$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionOne),\n *       map(() => FeatureActions.actionTwo())\n *     )\n *   );\n *\n *   // non-dispatching effect\n *   readonly effect2$ = createEffect(\n *     () => this.actions$.pipe(\n *       ofType(FeatureActions.actionTwo),\n *       tap(() => console.log('Action Two Dispatched'))\n *     ),\n *     { dispatch: false } // FeatureActions.actionTwo is not dispatched\n *   );\n *\n *   constructor(private readonly actions$: Actions) {}\n * }\n * ```\n *\n * ### Functional Effects\n *\n * ```ts\n * // mapping to a different action\n * export const loadUsers = createEffect(\n *   (actions$ = inject(Actions), usersService = inject(UsersService)) => {\n *     return actions$.pipe(\n *       ofType(UsersPageActions.opened),\n *       exhaustMap(() => {\n *         return usersService.getAll().pipe(\n *           map((users) => UsersApiActions.usersLoadedSuccess({ users })),\n *           catchError((error) =>\n *             of(UsersApiActions.usersLoadedFailure({ error }))\n *           )\n *         );\n *       })\n *     );\n *   },\n *   { functional: true }\n * );\n *\n * // non-dispatching functional effect\n * export const logDispatchedActions = createEffect(\n *   () => inject(Actions).pipe(tap(console.log)),\n *   { functional: true, dispatch: false }\n * );\n * ```\n */\nfunction createEffect(source, config = {}) {\n    const effect = config.functional ? source : source();\n    const value = {\n        ...DEFAULT_EFFECT_CONFIG,\n        ...config, // Overrides any defaults if values are provided\n    };\n    Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n        value,\n    });\n    return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n    const propertyNames = Object.getOwnPropertyNames(instance);\n    const metadata = propertyNames\n        .filter((propertyName) => {\n        if (instance[propertyName] &&\n            instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n            // If the property type has overridden `hasOwnProperty` we need to ensure\n            // that the metadata is valid (containing a `dispatch` property)\n            // https://github.com/ngrx/platform/issues/2975\n            const property = instance[propertyName];\n            return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n        }\n        return false;\n    })\n        .map((propertyName) => {\n        const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n        return {\n            propertyName,\n            ...metaData,\n        };\n    });\n    return metadata;\n}\n\nfunction getEffectsMetadata(instance) {\n    return getSourceMetadata(instance).reduce((acc, { propertyName, dispatch, useEffectsErrorHandler }) => {\n        acc[propertyName] = { dispatch, useEffectsErrorHandler };\n        return acc;\n    }, {});\n}\nfunction getSourceMetadata(instance) {\n    return getCreateEffectMetadata(instance);\n}\n\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\nfunction isClassInstance(obj) {\n    return (!!obj.constructor &&\n        obj.constructor.name !== 'Object' &&\n        obj.constructor.name !== 'Function');\n}\nfunction isClass(classOrRecord) {\n    return typeof classOrRecord === 'function';\n}\nfunction getClasses(classesAndRecords) {\n    return classesAndRecords.filter(isClass);\n}\nfunction isToken(tokenOrRecord) {\n    return tokenOrRecord instanceof InjectionToken || isClass(tokenOrRecord);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n    const source = getSourceForInstance(sourceInstance);\n    const isClassBasedEffect = !!source && source.constructor.name !== 'Object';\n    const sourceName = isClassBasedEffect ? source.constructor.name : null;\n    const observables$ = getSourceMetadata(sourceInstance).map(({ propertyName, dispatch, useEffectsErrorHandler, }) => {\n        const observable$ = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        const effectAction$ = useEffectsErrorHandler\n            ? effectsErrorHandler(observable$, globalErrorHandler)\n            : observable$;\n        if (dispatch === false) {\n            return effectAction$.pipe(ignoreElements());\n        }\n        const materialized$ = effectAction$.pipe(materialize());\n        return materialized$.pipe(map((notification) => ({\n            effect: sourceInstance[propertyName],\n            notification,\n            propertyName,\n            sourceName,\n            sourceInstance,\n        })));\n    });\n    return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n    return observable$.pipe(catchError((error) => {\n        if (errorHandler)\n            errorHandler.handleError(error);\n        if (retryAttemptLeft <= 1) {\n            return observable$; // last attempt\n        }\n        // Return observable that produces this particular effect\n        return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n    }));\n}\n\nclass Actions extends Observable {\n    constructor(source) {\n        super();\n        if (source) {\n            this.source = source;\n        }\n    }\n    lift(operator) {\n        const observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: Actions, deps: [{ token: ScannedActionsSubject }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: Actions, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: Actions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Observable, decorators: [{\n                    type: Inject,\n                    args: [ScannedActionsSubject]\n                }] }]; } });\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n *\n * @usageNotes\n *\n * Filter the Actions stream on the \"customers page loaded\" action\n *\n * ```ts\n * import { ofType } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  ofType(fromCustomers.pageLoaded)\n * )\n * ```\n */\nfunction ofType(...allowedTypes) {\n    return filter((action) => allowedTypes.some((typeOrActionCreator) => {\n        if (typeof typeOrActionCreator === 'string') {\n            // Comparing the string to type\n            return typeOrActionCreator === action.type;\n        }\n        // We are filtering by ActionCreator\n        return typeOrActionCreator.type === action.type;\n    }));\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst _ROOT_EFFECTS_INSTANCES = new InjectionToken('@ngrx/effects Internal Root Effects Instances');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst _FEATURE_EFFECTS_INSTANCE_GROUPS = new InjectionToken('@ngrx/effects Internal Feature Effects Instance Groups');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler', { providedIn: 'root', factory: () => defaultEffectsErrorHandler });\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        const action = output.notification.value;\n        const isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n        }\n    }\n}\nfunction isAction(action) {\n    return (typeof action !== 'function' &&\n        action &&\n        action.type &&\n        typeof action.type === 'string');\n}\nfunction getEffectName({ propertyName, sourceInstance, sourceName, }) {\n    const isMethod = typeof sourceInstance[propertyName] === 'function';\n    const isClassBasedEffect = !!sourceName;\n    return isClassBasedEffect\n        ? `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`\n        : `\"${String(propertyName)}()\"`;\n}\nfunction stringify(action) {\n    try {\n        return JSON.stringify(action);\n    }\n    catch {\n        return action;\n    }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n    return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n    return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n    return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n    return (instance &&\n        functionName in instance &&\n        typeof instance[functionName] === 'function');\n}\n\nclass EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n        super();\n        this.errorHandler = errorHandler;\n        this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n        this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n        return this.pipe(groupBy((effectsInstance) => isClassInstance(effectsInstance)\n            ? getSourceForInstance(effectsInstance)\n            : effectsInstance), mergeMap((source$) => {\n            return source$.pipe(groupBy(effectsInstance));\n        }), mergeMap((source$) => {\n            const effect$ = source$.pipe(exhaustMap((sourceInstance) => {\n                return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n            }), map((output) => {\n                reportInvalidActions(output, this.errorHandler);\n                return output.notification;\n            }), filter((notification) => notification.kind === 'N' && notification.value != null), dematerialize());\n            // start the stream with an INIT action\n            // do this only for the first Effect instance\n            const init$ = source$.pipe(take(1), filter(isOnInitEffects), map((instance) => instance.ngrxOnInitEffects()));\n            return merge(effect$, init$);\n        }));\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectSources, deps: [{ token: i0.ErrorHandler }, { token: EFFECTS_ERROR_HANDLER }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectSources, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectSources, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EFFECTS_ERROR_HANDLER]\n                }] }]; } });\nfunction effectsInstance(sourceInstance) {\n    if (isOnIdentifyEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnIdentifyEffects();\n    }\n    return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n    return (sourceInstance) => {\n        const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    };\n}\n\nclass EffectsRunner {\n    get isStarted() {\n        return !!this.effectsSubscription;\n    }\n    constructor(effectSources, store) {\n        this.effectSources = effectSources;\n        this.store = store;\n        this.effectsSubscription = null;\n    }\n    start() {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    }\n    ngOnDestroy() {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRunner, deps: [{ token: EffectSources }, { token: i3.Store }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    /** @nocollapse */ static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRunner, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRunner, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: EffectSources }, { type: i3.Store }]; } });\n\nclass EffectsRootModule {\n    constructor(sources, runner, store, rootEffectsInstances, storeRootModule, storeFeatureModule, guard) {\n        this.sources = sources;\n        runner.start();\n        for (const effectsInstance of rootEffectsInstances) {\n            sources.addEffects(effectsInstance);\n        }\n        store.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    addEffects(effectsInstance) {\n        this.sources.addEffects(effectsInstance);\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRootModule, deps: [{ token: EffectSources }, { token: EffectsRunner }, { token: i3.Store }, { token: _ROOT_EFFECTS_INSTANCES }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }, { token: _ROOT_EFFECTS_GUARD, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRootModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRootModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsRootModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: EffectSources }, { type: EffectsRunner }, { type: i3.Store }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_INSTANCES]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [_ROOT_EFFECTS_GUARD]\n                }] }]; } });\n\nclass EffectsFeatureModule {\n    constructor(effectsRootModule, effectsInstanceGroups, storeRootModule, storeFeatureModule) {\n        const effectsInstances = effectsInstanceGroups.flat();\n        for (const effectsInstance of effectsInstances) {\n            effectsRootModule.addEffects(effectsInstance);\n        }\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsFeatureModule, deps: [{ token: EffectsRootModule }, { token: _FEATURE_EFFECTS_INSTANCE_GROUPS }, { token: i3.StoreRootModule, optional: true }, { token: i3.StoreFeatureModule, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsFeatureModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsFeatureModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsFeatureModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }], ctorParameters: function () { return [{ type: EffectsRootModule }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_FEATURE_EFFECTS_INSTANCE_GROUPS]\n                }] }, { type: i3.StoreRootModule, decorators: [{\n                    type: Optional\n                }] }, { type: i3.StoreFeatureModule, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass EffectsModule {\n    static forFeature(...featureEffects) {\n        const effects = featureEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _FEATURE_EFFECTS,\n                    multi: true,\n                    useValue: effects,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _FEATURE_EFFECTS_INSTANCE_GROUPS,\n                    multi: true,\n                    useFactory: createEffectsInstances,\n                    deps: [_FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    static forRoot(...rootEffects) {\n        const effects = rootEffects.flat();\n        const effectsClasses = getClasses(effects);\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                effectsClasses,\n                {\n                    provide: _ROOT_EFFECTS,\n                    useValue: [effects],\n                },\n                {\n                    provide: _ROOT_EFFECTS_GUARD,\n                    useFactory: _provideForRootGuard,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: _ROOT_EFFECTS_INSTANCES,\n                    useFactory: createEffectsInstances,\n                    deps: [_ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsModule }); }\n    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.3\", ngImport: i0, type: EffectsModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\nfunction createEffectsInstances(effectsGroups, userProvidedEffectsGroups) {\n    const effects = [];\n    for (const effectsGroup of effectsGroups) {\n        effects.push(...effectsGroup);\n    }\n    for (const userProvidedEffectsGroup of userProvidedEffectsGroups) {\n        effects.push(...userProvidedEffectsGroup);\n    }\n    return effects.map((effectsTokenOrRecord) => isToken(effectsTokenOrRecord)\n        ? inject(effectsTokenOrRecord)\n        : effectsTokenOrRecord);\n}\nfunction _provideForRootGuard() {\n    const runner = inject(EffectsRunner, { optional: true, skipSelf: true });\n    const rootEffects = inject(_ROOT_EFFECTS, { self: true });\n    // check whether any effects are actually passed\n    const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n    if (hasEffects && runner) {\n        throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n    const { project, error, complete, operator, unsubscribe } = typeof configOrProject === 'function'\n        ? {\n            project: configOrProject,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: errorFn,\n            operator: concatMap,\n            complete: undefined,\n            unsubscribe: undefined,\n        }\n        : { ...configOrProject, operator: configOrProject.operator || concatMap };\n    return (source) => defer(() => {\n        const subject = new Subject();\n        return merge(source.pipe(operator((input, index) => defer(() => {\n            let completed = false;\n            let errored = false;\n            let projectedCount = 0;\n            return project(input, index).pipe(materialize(), map((notification) => {\n                switch (notification.kind) {\n                    case 'E':\n                        errored = true;\n                        return {\n                            kind: 'N',\n                            value: error(notification.error, input),\n                        };\n                    case 'C':\n                        completed = true;\n                        return complete\n                            ? {\n                                kind: 'N',\n                                value: complete(projectedCount, input),\n                            }\n                            : undefined;\n                    default:\n                        ++projectedCount;\n                        return notification;\n                }\n            }), filter((n) => n != null), dematerialize(), finalize(() => {\n                if (!completed && !errored && unsubscribe) {\n                    subject.next(unsubscribe(projectedCount, input));\n                }\n            }));\n        }))), subject);\n    });\n}\n\n/**\n * `concatLatestFrom` combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n *\n * @usageNotes\n *\n * Select the active customer from the NgRx Store\n *\n * ```ts\n * import { concatLatestFrom } from '@ngrx/effects';\n * import * as fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  concatLatestFrom(() => this.store.select(fromCustomers.selectActiveCustomer))\n * )\n * ```\n *\n * Select a customer from the NgRx Store by its id that is available on the action\n *\n * ```ts\n * import { concatLatestFrom } from '@ngrx/effects';\n * import * fromCustomers from '../customers';\n *\n * this.actions$.pipe(\n *  concatLatestFrom((action) => this.store.select(fromCustomers.selectCustomer(action.customerId)))\n * )\n * ```\n */\nfunction concatLatestFrom(observablesFactory) {\n    return concatMap((value) => {\n        const observables = observablesFactory(value);\n        const observablesAsArray = Array.isArray(observables)\n            ? observables\n            : [observables];\n        return of(value).pipe(withLatestFrom(...observablesAsArray));\n    });\n}\n\n/**\n * @usageNotes\n *\n * ### Providing effects at the root level\n *\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideEffects(RouterEffects)],\n * });\n * ```\n *\n * ### Providing effects at the feature level\n *\n * ```ts\n * const booksRoutes: Route[] = [\n *   {\n *     path: '',\n *     providers: [provideEffects(BooksApiEffects)],\n *     children: [\n *       { path: '', component: BookListComponent },\n *       { path: ':id', component: BookDetailsComponent },\n *     ],\n *   },\n * ];\n * ```\n */\nfunction provideEffects(...effects) {\n    const effectsClassesAndRecords = effects.flat();\n    const effectsClasses = getClasses(effectsClassesAndRecords);\n    return makeEnvironmentProviders([\n        effectsClasses,\n        {\n            provide: ENVIRONMENT_INITIALIZER,\n            multi: true,\n            useValue: () => {\n                inject(ROOT_STORE_PROVIDER);\n                inject(FEATURE_STATE_PROVIDER, { optional: true });\n                const effectsRunner = inject(EffectsRunner);\n                const effectSources = inject(EffectSources);\n                const shouldInitEffects = !effectsRunner.isStarted;\n                if (shouldInitEffects) {\n                    effectsRunner.start();\n                }\n                for (const effectsClassOrRecord of effectsClassesAndRecords) {\n                    const effectsInstance = isClass(effectsClassOrRecord)\n                        ? inject(effectsClassOrRecord)\n                        : effectsClassOrRecord;\n                    effectSources.addEffects(effectsInstance);\n                }\n                if (shouldInitEffects) {\n                    const store = inject(Store);\n                    store.dispatch(rootEffectsInit());\n                }\n            },\n        },\n    ]);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, concatLatestFrom, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, provideEffects, rootEffectsInit };\n"],"names":["EMPTY","of","throwError","isFunction","NotificationKind","Notification","constructor","kind","value","error","hasValue","observe","observer","observeNotification","do","nextHandler","errorHandler","completeHandler","accept","nextOrObserver","complete","_a","next","toObservable","result","TypeError","createNext","createError","err","undefined","createComplete","completeNotification","notification","_b","_c","call","operate","createOperatorSubscriber","dematerialize","source","subscriber","subscribe","map","innerFrom","exhaustMap","project","resultSelector","pipe","a","i","b","ii","index","innerSub","isComplete","outerValue","finalize","callback","add","Observable","Subject","OperatorSubscriber","groupBy","keySelector","elementOrOptions","duration","connector","element","groups","Map","notify","cb","forEach","handleError","consumer","activeGroups","teardownAttempted","groupBySourceSubscriber","key","group","get","set","grouped","createGroupedObservable","durationSubscriber","unsubscribe","delete","clear","groupSubject","groupSubscriber","materialize","identity","noop","popResultSelector","withLatestFrom","inputs","len","length","otherValues","Array","ready","every","values","i1","merge","defer","ignoreElements","catchError","filter","mergeMap","take","concatMap","i0","InjectionToken","Injectable","Inject","NgModule","Optional","inject","makeEnvironmentProviders","ENVIRONMENT_INITIALIZER","i3","ScannedActionsSubject","createAction","ROOT_STORE_PROVIDER","FEATURE_STATE_PROVIDER","Store","DEFAULT_EFFECT_CONFIG","dispatch","functional","useEffectsErrorHandler","CREATE_EFFECT_METADATA_KEY","createEffect","config","effect","Object","defineProperty","getCreateEffectMetadata","instance","propertyNames","getOwnPropertyNames","metadata","propertyName","hasOwnProperty","property","metaData","getEffectsMetadata","getSourceMetadata","reduce","acc","getSourceForInstance","getPrototypeOf","isClassInstance","obj","name","isClass","classOrRecord","getClasses","classesAndRecords","isToken","tokenOrRecord","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","isClassBasedEffect","sourceName","observables$","observable$","effectAction$","materialized$","MAX_NUMBER_OF_RETRY_ATTEMPTS","defaultEffectsErrorHandler","retryAttemptLeft","Actions","lift","operator","observable","_","ɵfac","Actions_Factory","t","ɵɵinject","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","decorators","ofType","allowedTypes","action","some","typeOrActionCreator","_ROOT_EFFECTS_GUARD","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","_ROOT_EFFECTS_INSTANCES","_FEATURE_EFFECTS","_FEATURE_EFFECTS_INSTANCE_GROUPS","EFFECTS_ERROR_HANDLER","ROOT_EFFECTS_INIT","rootEffectsInit","reportInvalidActions","output","reporter","isInvalidAction","isAction","Error","getEffectName","stringify","isMethod","String","JSON","onIdentifyEffectsKey","isOnIdentifyEffects","onRunEffectsKey","isOnRunEffects","onInitEffects","isOnInitEffects","functionName","EffectSources","addEffects","effectSourceInstance","toActions","effectsInstance","source$","effect$","resolveEffectSource","init$","ngrxOnInitEffects","EffectSources_Factory","ErrorHandler","ngrxOnIdentifyEffects","mergedEffects$","ngrxOnRunEffects","EffectsRunner","isStarted","effectsSubscription","effectSources","store","start","ngOnDestroy","EffectsRunner_Factory","EffectsRootModule","sources","runner","rootEffectsInstances","storeRootModule","storeFeatureModule","guard","EffectsRootModule_Factory","StoreRootModule","StoreFeatureModule","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","EffectsFeatureModule","effectsRootModule","effectsInstanceGroups","effectsInstances","flat","EffectsFeatureModule_Factory","EffectsModule","forFeature","featureEffects","effects","effectsClasses","ngModule","providers","provide","multi","useValue","useFactory","createEffectsInstances","deps","forRoot","rootEffects","_provideForRootGuard","EffectsModule_Factory","effectsGroups","userProvidedEffectsGroups","effectsGroup","push","userProvidedEffectsGroup","effectsTokenOrRecord","optional","skipSelf","self","hasEffects","act","configOrProject","errorFn","subject","input","completed","errored","projectedCount","n","concatLatestFrom","observablesFactory","observables","observablesAsArray","isArray","provideEffects","effectsClassesAndRecords","effectsRunner","shouldInitEffects","effectsClassOrRecord"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7]}